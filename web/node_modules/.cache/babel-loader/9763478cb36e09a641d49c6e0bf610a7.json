{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Phrases.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport * as _ from 'lodash';\nconst defaultKeyShow = 'katakana';\n\nfunction Phrases({\n  data\n}) {\n  const [selectedItem, setSelectedItem] = useState({\n    index: -1,\n    type: ''\n  });\n\n  function handleClick(val) {\n    setSelectedItem(val);\n  }\n\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Items, {\n    data: data,\n    handleClick: handleClick,\n    selectedItem: selectedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}\n\nfunction Items({\n  data,\n  handleClick,\n  selectedItem\n}) {\n  return data.map((item, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: `P: ${item[defaultKeyShow]}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      \"aria-label\": \"listen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(GraphicEqIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })))), _.map(item, (phrase, key) => {\n      if (key !== defaultKeyShow) {\n        let isSelected = selectedItem.index === i && selectedItem.type === key;\n        let item = {\n          index: i,\n          type: key\n        };\n        return React.createElement(Phrase, {\n          phrase: phrase,\n          type: key,\n          clickFn: handleClick,\n          isSelected: isSelected,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n    }), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Phrase({\n  phrase,\n  type,\n  clickFn,\n  isSelected,\n  item\n}) {\n  const text = isSelected ? phrase : type;\n  return React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      clickFn(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, isSelected ? React.createElement(LockOpenIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : React.createElement(LockIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${text}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n}\n\nexport default Phrases;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Phrases.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","LockOpenIcon","LockIcon","GraphicEqIcon","ListItemText","ListItemSecondaryAction","IconButton","Divider","_","defaultKeyShow","Phrases","data","selectedItem","setSelectedItem","index","type","handleClick","val","Items","map","item","i","phrase","key","isSelected","Phrase","clickFn","text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport * as _ from 'lodash';\n\nconst defaultKeyShow = 'katakana';\n\nfunction Phrases({data}){\n    const [selectedItem, setSelectedItem] = useState({index: -1, type: ''});\n\n    function handleClick(val){\n        setSelectedItem(val);\n    }\n\n    return (\n        <List>\n            <Items data={data} handleClick={handleClick} selectedItem={selectedItem}></Items>\n        </List>\n    )\n}\n\nfunction Items({data, handleClick, selectedItem}){\n    return data.map((item, i) => {\n        return (\n            <div key={i}>\n                <ListItem>\n                    <ListItemText primary={`P: ${item[defaultKeyShow]}`}/>\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"start\" aria-label=\"listen\">\n                            <GraphicEqIcon/>\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                {\n                    _.map(item, (phrase, key) => {\n                        if(key !== defaultKeyShow){\n                            let isSelected = selectedItem.index === i && selectedItem.type === key;\n                            let item = {index: i, type: key};\n                            return (\n                                <Phrase phrase={phrase} type={key} clickFn={handleClick} isSelected={isSelected} item={item}></Phrase>\n                            )\n                        }\n                    })\n                }\n                <Divider light />\n            </div>\n        )\n    });\n}\n\nfunction Phrase({phrase, type, clickFn, isSelected, item}){\n    const text = isSelected ? phrase : type;\n    return (\n        <ListItem button onClick={()=>{clickFn(item)}}>\n            <ListItemIcon>\n            {   \n                isSelected ?\n                    <LockOpenIcon />\n                :\n                    <LockIcon />\n            }\n            </ListItemIcon>\n            <ListItemText primary={`${text}`} />\n        </ListItem>\n    )\n}\n\n\nexport default Phrases;\n"]},"metadata":{},"sourceType":"module"}