{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Player.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  console.log(audio);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    if (audio !== null) {\n      playing ? audio.play() : stopReset();\n    }\n  }, [playing]);\n\n  function stopReset() {\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle, audio];\n};\n\nconst Player = ({\n  url,\n  controls\n}) => {\n  const _url = url.indexOf('http') === -1 ? `http://japanese-drills.s3.amazonaws.com/audio/${url}` : url;\n\n  const [playing, toggle] = useAudio(_url);\n  return controls ? React.createElement(\"audio\", {\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: _url,\n    type: \"audio/mpeg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, playing ? React.createElement(StopIcon, {\n    style: {\n      color: red[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : React.createElement(RecordVoiceOverIcon, {\n    style: {\n      color: green[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Player.js"],"names":["React","useState","useEffect","useRef","StopIcon","RecordVoiceOverIcon","green","red","useAudio","url","audio","Audio","playing","setPlaying","console","log","toggle","play","stopReset","pause","currentTime","addEventListener","removeEventListener","Player","controls","_url","indexOf","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,0BAA3B;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AAGtB,QAAM,CAACC,KAAD,IAAUT,QAAQ,CAAC,IAAIU,KAAJ,CAAUF,GAAV,CAAD,CAAxB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEA,QAAMM,MAAM,GAAG,MAAMH,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,KAAK,KAAK,IAAb,EAAkB;AACZE,MAAAA,OAAO,GAAGF,KAAK,CAACO,IAAN,EAAH,GAAkBC,SAAS,EAAlC;AACL;AACF,GAJM,EAKP,CAACN,OAAD,CALO,CAAT;;AAQA,WAASM,SAAT,GAAoB;AAClBR,IAAAA,KAAK,CAACS,KAAN;AACAT,IAAAA,KAAK,CAACU,WAAN,GAAoB,CAApB;AACD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACW,gBAAN,CAAuB,OAAvB,EAAgC,MAAMR,UAAU,CAAC,KAAD,CAAhD;AACA,WAAO,MAAM;AACXH,MAAAA,KAAK,CAACY,mBAAN,CAA0B,OAA1B,EAAmC,MAAMT,UAAU,CAAC,KAAD,CAAnD;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACD,OAAD,EAAUI,MAAV,EAAkBN,KAAlB,CAAP;AACD,CA/BD;;AAiCA,MAAMa,MAAM,GAAG,CAAC;AAAEd,EAAAA,GAAF;AAAOe,EAAAA;AAAP,CAAD,KAAuB;AACpC,QAAMC,IAAI,GAAGhB,GAAG,CAACiB,OAAJ,CAAY,MAAZ,MAAwB,CAAC,CAAzB,GAA8B,iDAAgDjB,GAAI,EAAlF,GAAsFA,GAAnG;;AACA,QAAM,CAACG,OAAD,EAAUI,MAAV,IAAoBR,QAAQ,CAACiB,IAAD,CAAlC;AAEA,SAAOD,QAAQ,GACb;AAAO,IAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,GAAG,EAAEC,IAAb;AAAmB,IAAA,IAAI,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADa,GAKb;AAAK,IAAA,OAAO,EAAET,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,OAAO,GACH,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAEpB,GAAG,CAAC,GAAD;AAAZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAGH,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,EAAErB,KAAK,CAAC,GAAD;AAAd,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALZ,CALF;AAcD,CAlBD;;AAoBA,eAAeiB,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n\n\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  console.log(audio)\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      if(audio !== null){\n            playing ? audio.play() : stopReset();\n      }\n    },\n    [playing]\n  );\n\n  function stopReset(){\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, audio];\n};\n\nconst Player = ({ url, controls }) => {\n  const _url = url.indexOf('http') === -1 ? `http://japanese-drills.s3.amazonaws.com/audio/${url}` : url;\n  const [playing, toggle] = useAudio(_url);\n\n  return controls ? (\n    <audio controls>\n        <source src={_url} type=\"audio/mpeg\"/>\n    </audio>\n  ) : (\n    <div onClick={toggle}>\n        {\n            playing ? \n                <StopIcon style={{ color: red[500]}}></StopIcon>\n            :\n                <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n        }\n    </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}