{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useForm = (submitForm, validate, values) => {\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      submitForm();\n    }\n  }, [errors, isSubmitting]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setIsSubmitting(true);\n    setErrors(validate(values));\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setIsSubmitting(false);\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n\n    if (errors[event.target.name]) {\n      setErrors(validate({ ...values,\n        [event.target.name]: event.target.value\n      }));\n    }\n  };\n\n  const handleClearValues = () => {\n    setValues({});\n    setIsSubmitting(false);\n  };\n\n  return {\n    handleClearValues,\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/useForm.js"],"names":["useState","useEffect","useForm","submitForm","validate","values","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","event","preventDefault","handleChange","persist","setValues","target","name","value","handleClearValues"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,MAAMC,OAAO,GAAG,CAACC,UAAD,EAAaC,QAAb,EAAuBC,MAAvB,KAAkC;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCJ,YAAxC,EAAsD;AAClDL,MAAAA,UAAU;AACb;AACF,GAJM,EAIJ,CAACG,MAAD,EAASE,YAAT,CAJI,CAAT;;AAMA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,SAAS,CAACH,QAAQ,CAACC,MAAD,CAAT,CAAT;AACH,GAJD;;AAMA,QAAMW,YAAY,GAAIF,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACG,OAAN;AACAR,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAS,IAAAA,SAAS,CAACb,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACS,KAAK,CAACK,MAAN,CAAaC,IAAd,GAAqBN,KAAK,CAACK,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;;AACA,QAAGf,MAAM,CAACQ,KAAK,CAACK,MAAN,CAAaC,IAAd,CAAT,EAA6B;AACzBb,MAAAA,SAAS,CAACH,QAAQ,CAAC,EAAE,GAAGC,MAAL;AAAa,SAACS,KAAK,CAACK,MAAN,CAAaC,IAAd,GAAqBN,KAAK,CAACK,MAAN,CAAaE;AAA/C,OAAD,CAAT,CAAT;AACH;AACJ,GAPD;;AASA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BJ,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAT,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAHD;;AAKA,SAAO;AACHa,IAAAA,iBADG;AAEHN,IAAAA,YAFG;AAGHH,IAAAA,YAHG;AAIHR,IAAAA,MAJG;AAKHC,IAAAA;AALG,GAAP;AAOH,CArCD;;AAuCA,eAAeJ,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\n\nconst useForm = (submitForm, validate, values) => {\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            submitForm();\n        }\n      }, [errors, isSubmitting]);\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setIsSubmitting(true);\n        setErrors(validate(values));\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setIsSubmitting(false);\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n        if(errors[event.target.name]){\n            setErrors(validate({ ...values, [event.target.name]: event.target.value }));\n        }\n    };\n\n    const handleClearValues = () => {\n        setValues({});\n        setIsSubmitting(false)\n    }\n\n    return {\n        handleClearValues,\n        handleChange,\n        handleSubmit,\n        values,\n        errors\n    }\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}