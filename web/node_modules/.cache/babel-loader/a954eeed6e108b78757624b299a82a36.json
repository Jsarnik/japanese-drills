{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/QuestionsAndAnswers.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\nconst defaultKeyShow = 'katakana';\n\nfunction QuestionsAndAnswers({\n  data\n}) {\n  const filtered = _.filter({ ...data\n  }, o => {\n    return o.katakana !== null;\n  });\n\n  const [selectedItem, setSelectedItem] = useState({\n    index: -1,\n    type: ''\n  });\n\n  function handleClick(val) {\n    setSelectedItem(val);\n  }\n\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Items, {\n    data: filtered,\n    handleClick: handleClick,\n    selectedItem: selectedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\nfunction Items({\n  data,\n  handleClick,\n  selectedItem\n}) {\n  return data.map((item, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"question-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      className: 'button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(HelpOutlineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: `${item.question[defaultKeyShow]}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), item.question.audio ? React.createElement(Player, {\n      url: item.question.audio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : null), React.createElement(Questions, {\n      questions: item.question,\n      index: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), _.map(item.question, (question, key) => {\n      if (key !== defaultKeyShow && key !== 'audio') {\n        let isSelected = selectedItem.index === i && selectedItem.type === key;\n        let item = {\n          index: i,\n          type: key\n        };\n        return React.createElement(Question, {\n          question: question,\n          type: key,\n          clickFn: handleClick,\n          isSelected: isSelected,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      }\n    })), item.answer ? React.createElement(\"div\", {\n      className: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      className: 'button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(QuestionAnswerIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: `${item.answer[defaultKeyShow]}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), item.answer.audio ? React.createElement(Player, {\n      url: item.answer.audio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : null), _.map(item.answer, (answer, key) => {\n      if (key !== defaultKeyShow && key !== 'audio') {\n        let isSelected = selectedItem.index === i && selectedItem.type === key;\n        let item = {\n          index: i,\n          type: key\n        };\n        return React.createElement(Answer, {\n          answer: answer,\n          type: key,\n          clickFn: handleClick,\n          isSelected: isSelected,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }\n    })) : null, React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Questions({\n  questions,\n  index\n}) {\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    className: 'button',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(HelpOutlineIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${questions[defaultKeyShow]}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), questions.audio ? React.createElement(Player, {\n    url: questions.audio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }) : null), React.createElement(Translations, {\n    questions: questions,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }));\n}\n\nfunction Translations({\n  questions,\n  index\n}) {\n  const [selectedItem, setSelectedItem] = useState();\n  return _.map(questions, (question, key) => {\n    if (key !== defaultKeyShow && key !== 'audio') {\n      let isSelected = selectedItem.index === index && selectedItem.type === key,\n          selectModel = {\n        index: index,\n        type: key\n      };\n      return React.createElement(ListItem, {\n        button: true,\n        onClick: () => {\n          setSelectedItem(isSelected ? {} : selectModel);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(TranslateIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: `${isSelected ? question : key}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), isSelected ? React.createElement(VisibilityIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }) : React.createElement(VisibilityOffIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n  });\n} // function Question({question, type, clickFn, isSelected, item}){\n//     const [selectedQuestion, setSelectedQuestion] = useState({})\n//     const text = isSelected ? question : type;\n//     return (\n//         <ListItem button onClick={()=>{clickFn(isSelected ? {} : item)}}>\n//             <ListItemIcon>\n//                 <TranslateIcon />\n//             </ListItemIcon>\n//             <ListItemText primary={`${text}`} />\n//             {   \n//                 isSelected ?\n//                     <VisibilityIcon/>\n//                 :\n//                     <VisibilityOffIcon/>\n//             }\n//         </ListItem>\n//     )\n// }\n\n\nfunction Answer({\n  answer,\n  type,\n  clickFn,\n  isSelected,\n  item\n}) {\n  const text = isSelected ? answer : type;\n  return React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      clickFn(isSelected ? {} : item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(TranslateIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${text}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), isSelected ? React.createElement(VisibilityIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }) : React.createElement(VisibilityOffIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }));\n}\n\nexport default QuestionsAndAnswers;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/QuestionsAndAnswers.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","ListItemText","HelpOutlineIcon","QuestionAnswerIcon","VisibilityIcon","VisibilityOffIcon","TranslateIcon","Divider","Player","_","defaultKeyShow","QuestionsAndAnswers","data","filtered","filter","o","katakana","selectedItem","setSelectedItem","index","type","handleClick","val","Items","map","item","i","display","justifyContent","question","audio","key","isSelected","answer","Questions","questions","Translations","selectModel","Answer","clickFn","text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\nconst defaultKeyShow = 'katakana';\n\nfunction QuestionsAndAnswers({data}){\n    const filtered = _.filter({...data}, o=>{\n        return o.katakana !== null;\n    })\n    const [selectedItem, setSelectedItem] = useState({index: -1, type: ''});\n\n    function handleClick(val){\n        setSelectedItem(val);\n    }\n\n    return (\n        <List>\n            <Items data={filtered} handleClick={handleClick} selectedItem={selectedItem}></Items>\n        </List>\n    )\n}\n\nfunction Items({data, handleClick, selectedItem}){\n    return data.map((item, i) => {\n        return (\n            <div key={i} className=\"question-container\" style={{display: 'flex', justifyContent: 'space-between'}}>\n                <div className=\"question\">\n                    <ListItem button className={'button'}>\n                        <ListItemIcon>\n                            <HelpOutlineIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={`${item.question[defaultKeyShow]}`}/>\n                        {\n                            item.question.audio ?\n                                <Player url={item.question.audio}></Player>\n                            :\n                                null\n                        }\n                    </ListItem>\n                    <Questions questions={item.question} index={i}></Questions>\n                    {\n                        _.map(item.question, (question, key) => {\n                            if(key !== defaultKeyShow && key !== 'audio'){\n                                let isSelected = selectedItem.index === i && selectedItem.type === key;\n                                let item = {index: i, type: key};\n                                return (\n                                    <Question question={question} type={key} clickFn={handleClick} isSelected={isSelected} item={item}></Question>\n                                )\n                            }\n                        })\n                    }\n                </div>\n                {\n                    item.answer ? \n                        <div className=\"answer\">\n                            <ListItem button className={'button'}>\n                                <ListItemIcon>\n                                    <QuestionAnswerIcon/>\n                                </ListItemIcon>\n                                <ListItemText primary={`${item.answer[defaultKeyShow]}`}/>\n                                {\n                                    item.answer.audio ?\n                                        <Player url={item.answer.audio}></Player>\n                                    :\n                                    null\n                                }\n                            </ListItem>\n                            {\n                                _.map(item.answer, (answer, key) => {\n                                    if(key !== defaultKeyShow && key !== 'audio'){\n                                        let isSelected = selectedItem.index === i && selectedItem.type === key;\n                                        let item = {index: i, type: key};\n                                        return (\n                                            <Answer answer={answer} type={key} clickFn={handleClick} isSelected={isSelected} item={item}></Answer>\n                                        )\n                                    }\n                                })\n                            }\n                        </div>\n                    :\n                        null\n                }\n                <Divider light />\n            </div>\n        )\n    });\n}\n\nfunction Questions({questions, index}){\n    return (\n        <div className=\"question\">\n            <ListItem button className={'button'}>\n                <ListItemIcon>\n                    <HelpOutlineIcon/>\n                </ListItemIcon>\n                <ListItemText primary={`${questions[defaultKeyShow]}`}/>\n                {\n                    questions.audio ?\n                        <Player url={questions.audio}></Player>\n                    :\n                        null\n                }\n            </ListItem>\n            <Translations questions={questions} index={index}></Translations>\n\n            \n        </div>\n    )\n}\n\n\nfunction Translations({questions, index}){\n    const [selectedItem, setSelectedItem] = useState();\n\n    return _.map(questions, (question, key) => {\n        if(key !== defaultKeyShow && key !== 'audio'){\n            let isSelected = selectedItem.index === index && selectedItem.type === key,\n                selectModel = {index: index, type: key};\n\n            return (\n                <ListItem button onClick={()=>{setSelectedItem(isSelected ? {} : selectModel)}}>\n                    <ListItemIcon>\n                        <TranslateIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={`${isSelected ? question : key}`} />\n                    {   \n                        isSelected ?\n                            <VisibilityIcon/>\n                        :\n                            <VisibilityOffIcon/>\n                    }\n                </ListItem>\n            )\n        }\n    })\n}\n\n// function Question({question, type, clickFn, isSelected, item}){\n//     const [selectedQuestion, setSelectedQuestion] = useState({})\n//     const text = isSelected ? question : type;\n//     return (\n//         <ListItem button onClick={()=>{clickFn(isSelected ? {} : item)}}>\n//             <ListItemIcon>\n//                 <TranslateIcon />\n//             </ListItemIcon>\n//             <ListItemText primary={`${text}`} />\n//             {   \n//                 isSelected ?\n//                     <VisibilityIcon/>\n//                 :\n//                     <VisibilityOffIcon/>\n//             }\n//         </ListItem>\n//     )\n// }\n\nfunction Answer({answer, type, clickFn, isSelected, item}){\n    const text = isSelected ? answer : type;\n    return (\n        <ListItem button onClick={()=>{clickFn(isSelected ? {} : item)}}>\n            <ListItemIcon>\n                <TranslateIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${text}`} />\n            {   \n                isSelected ?\n                    <VisibilityIcon/>\n                :\n                    <VisibilityOffIcon/>\n            }\n        </ListItem>\n    )\n}\n\n\nexport default QuestionsAndAnswers;\n"]},"metadata":{},"sourceType":"module"}