{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Phrases.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\nconst defaultKeyShow = 'katakana';\n\nfunction Phrases({\n  data\n}) {\n  const [selectedItem, setSelectedItem] = useState({\n    index: -1,\n    type: ''\n  });\n\n  function handleClick(val) {\n    setSelectedItem(val);\n  }\n\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Items, {\n    data: data,\n    handleClick: handleClick,\n    selectedItem: selectedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nfunction Items({\n  data,\n  handleClick,\n  selectedItem\n}) {\n  return data.map((item, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"phrase-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: `P: ${item[defaultKeyShow]}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), item.audio ? React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      \"aria-label\": \"listen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Player, {\n      url: item.question.audio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))) : null), _.map(item, (phrase, key) => {\n      if (key !== defaultKeyShow) {\n        let isSelected = selectedItem.index === i && selectedItem.type === key;\n        let item = {\n          index: i,\n          type: key\n        };\n        return React.createElement(Phrase, {\n          phrase: phrase,\n          type: key,\n          clickFn: handleClick,\n          isSelected: isSelected,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }\n    }), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Phrase({\n  phrase,\n  type,\n  clickFn,\n  isSelected,\n  item\n}) {\n  const text = isSelected ? phrase : type;\n  return React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      clickFn(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, isSelected ? React.createElement(LockOpenIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) : React.createElement(LockIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${text}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}\n\nexport default Phrases;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Phrases.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","LockOpenIcon","LockIcon","GraphicEqIcon","ListItemText","ListItemSecondaryAction","IconButton","Divider","Player","_","defaultKeyShow","Phrases","data","selectedItem","setSelectedItem","index","type","handleClick","val","Items","map","item","i","display","justifyContent","audio","question","phrase","key","isSelected","Phrase","clickFn","text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\nconst defaultKeyShow = 'katakana';\n\nfunction Phrases({data}){\n    const [selectedItem, setSelectedItem] = useState({index: -1, type: ''});\n\n    function handleClick(val){\n        setSelectedItem(val);\n    }\n\n    return (\n        <List>\n            <Items data={data} handleClick={handleClick} selectedItem={selectedItem}></Items>\n        </List>\n    )\n}\n\nfunction Items({data, handleClick, selectedItem}){\n    return data.map((item, i) => {\n        return (\n            <div key={i} className=\"phrase-container\" style={{display: 'flex', justifyContent: 'space-between'}}>\n                <ListItem>\n                    <ListItemText primary={`P: ${item[defaultKeyShow]}`}/>\n                    {\n                        item.audio ?\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"start\" aria-label=\"listen\">\n                                    <Player url={item.question.audio}></Player>\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        :\n                            null\n                    }\n                </ListItem>\n                {\n                    _.map(item, (phrase, key) => {\n                        if(key !== defaultKeyShow){\n                            let isSelected = selectedItem.index === i && selectedItem.type === key;\n                            let item = {index: i, type: key};\n                            return (\n                                <Phrase phrase={phrase} type={key} clickFn={handleClick} isSelected={isSelected} item={item}></Phrase>\n                            )\n                        }\n                    })\n                }\n                <Divider light />\n            </div>\n        )\n    });\n}\n\nfunction Phrase({phrase, type, clickFn, isSelected, item}){\n    const text = isSelected ? phrase : type;\n    return (\n        <ListItem button onClick={()=>{clickFn(item)}}>\n            <ListItemIcon>\n            {   \n                isSelected ?\n                    <LockOpenIcon />\n                :\n                    <LockIcon />\n            }\n            </ListItemIcon>\n            <ListItemText primary={`${text}`} />\n        </ListItem>\n    )\n}\n\n\nexport default Phrases;\n"]},"metadata":{},"sourceType":"module"}