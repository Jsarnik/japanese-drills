{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Player.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const audioItem = useRef(null);\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    if (audioItem.current !== null) {\n      playing ? audioItem.current.play() : audioItem.current.pause();\n    }\n  }, [playing]);\n  useEffect(() => {\n    audioItem.current.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audioItem.current.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle, audioItem];\n};\n\nconst Player = ({\n  url\n}) => {\n  const [playing, toggle, audioItem] = useAudio(url);\n  return React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, playing ? React.createElement(PauseIcon, {\n    style: {\n      color: red[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(RecordVoiceOverIcon, {\n    style: {\n      color: green[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"audio\", {\n    ref: audioItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: url,\n    type: \"audio/mpeg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Player.js"],"names":["React","useState","useEffect","useRef","PauseIcon","RecordVoiceOverIcon","green","red","useAudio","url","audioItem","audio","Audio","playing","setPlaying","toggle","current","play","pause","addEventListener","removeEventListener","Player","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,0BAA3B;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACQ,KAAD,IAAUV,QAAQ,CAAC,IAAIW,KAAJ,CAAUH,GAAV,CAAD,CAAxB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,SAAS,CAACM,OAAV,KAAsB,IAAzB,EAA8B;AACxBH,MAAAA,OAAO,GAAGH,SAAS,CAACM,OAAV,CAAkBC,IAAlB,EAAH,GAA8BP,SAAS,CAACM,OAAV,CAAkBE,KAAlB,EAArC;AACL;AAEF,GALM,EAMP,CAACL,OAAD,CANO,CAAT;AASAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,CAACM,OAAV,CAAkBG,gBAAlB,CAAmC,OAAnC,EAA4C,MAAML,UAAU,CAAC,KAAD,CAA5D;AACA,WAAO,MAAM;AACTJ,MAAAA,SAAS,CAACM,OAAV,CAAkBI,mBAAlB,CAAsC,OAAtC,EAA+C,MAAMN,UAAU,CAAC,KAAD,CAA/D;AACH,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACD,OAAD,EAAUE,MAAV,EAAkBL,SAAlB,CAAP;AACD,CAxBD;;AA0BA,MAAMW,MAAM,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAAa;AAC1B,QAAM,CAACI,OAAD,EAAUE,MAAV,EAAkBL,SAAlB,IAA+BF,QAAQ,CAACC,GAAD,CAA7C;AAEA,SACM;AAAK,IAAA,OAAO,EAAEM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,OAAO,GACH,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAEf,GAAG,CAAC,GAAD;AAAZ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAGH,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAEhB,KAAK,CAAC,GAAD;AAAd,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALZ,EAOI;AAAO,IAAA,GAAG,EAAEI,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,GAAG,EAAED,GAAb;AAAkB,IAAA,IAAI,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADN;AAcD,CAjBD;;AAmBA,eAAeY,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const audioItem = useRef(null);\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      if(audioItem.current !== null){\n            playing ? audioItem.current.play() : audioItem.current.pause();\n      }\n      \n    },\n    [playing]\n  );\n\n  useEffect(() => {\n    audioItem.current.addEventListener('ended', () => setPlaying(false));\n    return () => {\n        audioItem.current.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, audioItem];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle, audioItem] = useAudio(url);\n\n  return (\n        <div onClick={toggle}>\n            {\n                playing ? \n                    <PauseIcon style={{ color: red[500]}}></PauseIcon>\n                :\n                    <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n            }\n            <audio ref={audioItem}>\n                <source src={url} type=\"audio/mpeg\"/>\n                \n            </audio>\n        </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}