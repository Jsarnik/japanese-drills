{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Questions.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nfunction Questions({\n  data\n}) {\n  const [selectedItem, setSelectedItem] = useState({\n    index: -1,\n    type: ''\n  });\n\n  function handleClick(index, type) {\n    setSelectedItem({\n      index,\n      type\n    });\n  }\n\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Items, {\n    data: data,\n    handleClick: handleClick,\n    selectedItem: selectedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nfunction Items({\n  data,\n  handleClick,\n  selectedItem\n}) {\n  return data.map((item, i) => {\n    console.log(item);\n    let isSelected = selectedItem.index === i && selectedItem.type === 'romaji';\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, item.question.map((question, key) => {\n      console.log(key);\n      return React.createElement(Question, {\n        question: question,\n        type: 'english',\n        clickFn: handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }), item.answer.map((answer, key) => {\n      console.log(key);\n      return React.createElement(Answer, {\n        answer: answer,\n        type: 'english',\n        clickFn: handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Question({\n  question,\n  type,\n  clickFn,\n  isSelected\n}) {\n  const text = question[type];\n  return React.createElement(ListItem, {\n    button: true,\n    onClick: clickFn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(LockOpenIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${text}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n}\n\nfunction Answer({\n  answer,\n  type\n}) {\n  const text = answer[type];\n  return React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(LockOpenIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${text}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Questions.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","LockOpenIcon","LockIcon","ListItemText","Divider","Questions","data","selectedItem","setSelectedItem","index","type","handleClick","Items","map","item","i","console","log","isSelected","question","key","answer","Question","clickFn","text","Answer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nfunction Questions({data}){\n    const [selectedItem, setSelectedItem] = useState({index: -1, type: ''});\n\n    function handleClick(index, type){\n        setSelectedItem({index, type});\n    }\n\n    return (\n        <List>\n            <Items data={data} handleClick={handleClick} selectedItem={selectedItem}></Items>\n        </List>\n    )\n}\n\nfunction Items({data, handleClick, selectedItem}){\n    return data.map((item, i) => {\n        console.log(item)\n        let isSelected = selectedItem.index === i && selectedItem.type === 'romaji';\n        return (\n            <div key={i}>\n                {\n                    item.question.map((question, key) => {\n                        console.log(key)\n                        return (\n                            <Question question={question} type={'english'} clickFn={handleClick}></Question>\n                        )\n                    })\n                }\n                {\n                    item.answer.map((answer, key) => {\n                        console.log(key)\n                        return (\n                            <Answer answer={answer} type={'english'} clickFn={handleClick}></Answer>\n                        )\n                    })\n                }\n                <Divider light />\n            </div>\n        )\n    });\n}\n\nfunction Question({question, type, clickFn, isSelected}){\n    const text = question[type];\n    return (\n        <ListItem button onClick={clickFn}>\n            <ListItemIcon>\n            <LockOpenIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${text}`} />\n        </ListItem>\n    )\n}\n\nfunction Answer({answer, type}){\n    const text = answer[type];\n    return (\n        <ListItem button>\n            <ListItemIcon>\n            <LockOpenIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${text}`} />\n        </ListItem>\n    )\n}\n\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}