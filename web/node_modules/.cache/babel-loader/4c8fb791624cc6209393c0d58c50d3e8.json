{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/AddCard.js\";\nimport React, { useState } from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction AddCard() {\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    handleClearValues\n  } = useForm(submit, validate);\n  const [isFormSubmit, setFormSubmit] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function submit() {\n    setIsLoading(true); // let url = `${baseURL}${queryString.stringify(values)}`;\n    // axios.post(url, {}).then(res => {\n    //     handleSubmitReset();\n    // }).catch(err => {\n    //     handleSubmitReset();\n    // });\n  }\n\n  function handleSubmitReset() {\n    setIsLoading(false);\n    setFormSubmit(true);\n    handleClearValues();\n  }\n\n  console.log(values.type);\n  return React.createElement(\"form\", {\n    id: \"addCardForm\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"grid-item flex-half\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    \"aria-label\": \"hiragana\",\n    className: `${errors.hiragana ? 'error' : ''}`,\n    type: \"text\",\n    placeholder: \"hiragana\",\n    name: \"hiragana\",\n    onChange: handleChange,\n    value: values.hiragana || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), errors.hiragana ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    className: \"grid-item flex-half\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    \"aria-label\": \"romaji\",\n    className: \"\",\n    type: \"text\",\n    placeholder: \"romaji\",\n    name: \"romaji\",\n    onChange: handleChange,\n    value: values.romaji || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), errors.romaji ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    className: \"grid-item flex-half\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    \"aria-label\": \"email\",\n    className: `${errors.english ? 'error' : ''}`,\n    type: \"text\",\n    placeholder: \"english\",\n    name: \"english\",\n    onChange: handleChange,\n    value: values.english || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), errors.english ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    className: \"grid-item flex-half\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Select, {\n    labelId: \"Type\",\n    id: \"type-select\",\n    value: values.type || '',\n    name: \"value\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 'phrase',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Phrase\"), React.createElement(MenuItem, {\n    value: 'question',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Question\"), React.createElement(MenuItem, {\n    value: 'vocab',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Vocab\")), errors.type ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"button\", {\n    \"aria-label\": \"submit\",\n    type: \"submit\",\n    htmltype: \"submit\",\n    className: \"email-submit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bixal-button-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"SUBMIT\"))));\n}\n\nexport default AddCard;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/AddCard.js"],"names":["React","useState","useForm","validate","_","Select","MenuItem","AddCard","errors","values","handleChange","handleSubmit","handleClearValues","submit","isFormSubmit","setFormSubmit","isLoading","setIsLoading","handleSubmitReset","console","log","type","hiragana","romaji","english"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction AddCard() {\n    const { errors, values, handleChange, handleSubmit, handleClearValues } = useForm(submit, validate);\n\n    const [isFormSubmit, setFormSubmit] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    function submit(){\n        setIsLoading(true);\n        // let url = `${baseURL}${queryString.stringify(values)}`;\n\n        // axios.post(url, {}).then(res => {\n        //     handleSubmitReset();\n        // }).catch(err => {\n        //     handleSubmitReset();\n        // });\n    }\n\n    function handleSubmitReset(){\n        setIsLoading(false);\n        setFormSubmit(true);\n        handleClearValues();\n    }\n\n    console.log(values.type)\n\n    return (\n        <form id=\"addCardForm\" onSubmit={handleSubmit}>\n            <div className=\"grid-item flex-half\">\n                <input aria-label=\"hiragana\" className={`${errors.hiragana ? 'error' : ''}`} type=\"text\" placeholder=\"hiragana\" name=\"hiragana\" onChange={handleChange} value={values.hiragana || ''} />\n                {\n                    errors.hiragana ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div className=\"grid-item flex-half\">\n                <input aria-label=\"romaji\" className=\"\" type=\"text\" placeholder=\"romaji\" name=\"romaji\" onChange={handleChange} value={values.romaji || ''} />\n                {\n                    errors.romaji ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div className=\"grid-item flex-half\">\n                <input aria-label=\"email\" className={`${errors.english ? 'error' : ''}`} type=\"text\" placeholder=\"english\" name=\"english\" onChange={handleChange} value={values.english || ''} />\n                {\n                    errors.english ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div className=\"grid-item flex-half\">\n            <Select\n                labelId=\"Type\"\n                id=\"type-select\"\n                value={values.type || ''}\n                name=\"value\"\n                onChange={handleChange}\n            >\n                <MenuItem value={'phrase'}>Phrase</MenuItem>\n                <MenuItem value={'question'}>Question</MenuItem>\n                <MenuItem value={'vocab'}>Vocab</MenuItem>\n            </Select>\n                {\n                    errors.type ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <button aria-label=\"submit\" type=\"submit\" htmltype=\"submit\" className=\"email-submit-button\">\n                <div className=\"bixal-button-content\">\n                    <div>SUBMIT</div>\n                </div>\n            </button>\n        </form>\n    )\n}\n\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}