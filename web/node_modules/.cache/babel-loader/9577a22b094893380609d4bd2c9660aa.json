{"ast":null,"code":"import _slicedToArray from\"/Users/jsarnik-a/Documents/Projects/learn-japanese/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import StopIcon from'@material-ui/icons/Stop';import RecordVoiceOverIcon from'@material-ui/icons/RecordVoiceOver';import{green,red}from'@material-ui/core/colors';var useAudio=function useAudio(url){var audioItem=useRef(null);var _useState=useState(new Audio(url)),_useState2=_slicedToArray(_useState,1),audio=_useState2[0];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),playing=_useState4[0],setPlaying=_useState4[1];var toggle=function toggle(){return setPlaying(!playing);};useEffect(function(){if(audioItem.current!==null){playing?audioItem.current.play():stopReset();}},[playing]);function stopReset(){audioItem.current.pause();audioItem.current.currentTime=0;}useEffect(function(){audioItem.current.addEventListener('ended',function(){return setPlaying(false);});return function(){audioItem.current.removeEventListener('ended',function(){return setPlaying(false);});};},[]);return[playing,toggle,audioItem];};var Player=function Player(_ref){var url=_ref.url;var _useAudio=useAudio(url),_useAudio2=_slicedToArray(_useAudio,3),playing=_useAudio2[0],toggle=_useAudio2[1],audioItem=_useAudio2[2];return React.createElement(\"div\",{onClick:toggle},playing?React.createElement(StopIcon,{style:{color:red[500]}}):React.createElement(RecordVoiceOverIcon,{style:{color:green[500]}}),React.createElement(\"audio\",{ref:audioItem,controls:true},React.createElement(\"source\",{src:url,type:\"audio/mpeg\"})));};export default Player;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Player.js"],"names":["React","useState","useEffect","useRef","StopIcon","RecordVoiceOverIcon","green","red","useAudio","url","audioItem","Audio","audio","playing","setPlaying","toggle","current","play","stopReset","pause","currentTime","addEventListener","removeEventListener","Player","color"],"mappings":"qIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,oCAAhC,CACA,OAASC,KAAT,CAAgBC,GAAhB,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,GAAG,CAAI,CACtB,GAAMC,CAAAA,SAAS,CAAGP,MAAM,CAAC,IAAD,CAAxB,CADsB,cAENF,QAAQ,CAAC,GAAIU,CAAAA,KAAJ,CAAUF,GAAV,CAAD,CAFF,wCAEfG,KAFe,8BAGQX,QAAQ,CAAC,KAAD,CAHhB,yCAGfY,OAHe,eAGNC,UAHM,eAKtB,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMD,CAAAA,UAAU,CAAC,CAACD,OAAF,CAAhB,EAAf,CAEAX,SAAS,CAAC,UAAM,CACZ,GAAGQ,SAAS,CAACM,OAAV,GAAsB,IAAzB,CAA8B,CACxBH,OAAO,CAAGH,SAAS,CAACM,OAAV,CAAkBC,IAAlB,EAAH,CAA8BC,SAAS,EAA9C,CACL,CACF,CAJM,CAKP,CAACL,OAAD,CALO,CAAT,CAQA,QAASK,CAAAA,SAAT,EAAoB,CAClBR,SAAS,CAACM,OAAV,CAAkBG,KAAlB,GACAT,SAAS,CAACM,OAAV,CAAkBI,WAAlB,CAAgC,CAAhC,CACD,CAEDlB,SAAS,CAAC,UAAM,CACdQ,SAAS,CAACM,OAAV,CAAkBK,gBAAlB,CAAmC,OAAnC,CAA4C,iBAAMP,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAA5C,EACA,MAAO,WAAM,CACTJ,SAAS,CAACM,OAAV,CAAkBM,mBAAlB,CAAsC,OAAtC,CAA+C,iBAAMR,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAA/C,EACH,CAFD,CAGD,CALQ,CAKN,EALM,CAAT,CAOA,MAAO,CAACD,OAAD,CAAUE,MAAV,CAAkBL,SAAlB,CAAP,CACD,CA5BD,CA8BA,GAAMa,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAa,IAAVd,CAAAA,GAAU,MAAVA,GAAU,eACWD,QAAQ,CAACC,GAAD,CADnB,wCACnBI,OADmB,eACVE,MADU,eACFL,SADE,eAG1B,MACM,4BAAK,OAAO,CAAEK,MAAd,EAEQF,OAAO,CACH,oBAAC,QAAD,EAAU,KAAK,CAAE,CAAEW,KAAK,CAAEjB,GAAG,CAAC,GAAD,CAAZ,CAAjB,EADG,CAGH,oBAAC,mBAAD,EAAqB,KAAK,CAAE,CAAEiB,KAAK,CAAElB,KAAK,CAAC,GAAD,CAAd,CAA5B,EALZ,CAOI,6BAAO,GAAG,CAAEI,SAAZ,CAAuB,QAAQ,KAA/B,EACI,8BAAQ,GAAG,CAAED,GAAb,CAAkB,IAAI,CAAC,YAAvB,EADJ,CAPJ,CADN,CAcD,CAjBD,CAmBA,cAAec,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const audioItem = useRef(null);\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      if(audioItem.current !== null){\n            playing ? audioItem.current.play() : stopReset();\n      }\n    },\n    [playing]\n  );\n\n  function stopReset(){\n    audioItem.current.pause();\n    audioItem.current.currentTime = 0;\n  }\n\n  useEffect(() => {\n    audioItem.current.addEventListener('ended', () => setPlaying(false));\n    return () => {\n        audioItem.current.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, audioItem];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle, audioItem] = useAudio(url);\n\n  return (\n        <div onClick={toggle}>\n            {\n                playing ? \n                    <StopIcon style={{ color: red[500]}}></StopIcon>\n                :\n                    <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n            }\n            <audio ref={audioItem} controls>\n                <source src={url} type=\"audio/mpeg\"/>\n                \n            </audio>\n        </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}