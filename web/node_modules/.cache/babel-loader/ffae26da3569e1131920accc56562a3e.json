{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\nfunction Card({\n  card,\n  isMobile\n}) {\n  const [isShowAnswer, setIsShowAnswer] = useState(false);\n  const [isShowHint, setIsShowHint] = useState(false);\n  console.log(isShowAnswer);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"study-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, card.hiragana), isShowHint ? React.createElement(\"div\", {\n    className: \"hint-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, card.romaji) : React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => setIsShowHint(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Show Hint\"), card.audioUrl ? React.createElement(Player, {\n    url: card.audioUrl,\n    controls: isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }) : null, isShowAnswer ? React.createElement(\"div\", {\n    className: \"answer-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, card.english) : React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => setIsShowAnswer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Show Answer\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}\n\nfunction FlashCards({\n  data\n}) {\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n\n  const remaining = _.filter(data, o => {\n    return !o.isLesson;\n  });\n\n  const finished = _.filter(data, o => {\n    return o.isLesson;\n  });\n\n  function setNext(isRepeat) {\n    if (!isRepeat) {//dispatch with no repeat flag\n    }\n\n    setCurrentCardIndex(currentCardIndex + 1);\n  }\n\n  const currentCard = remaining[currentCardIndex];\n  return currentCard ? React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: currentCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => setNext(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Repeat\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => setNext(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Good\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, currentCardIndex + 1, \" / \", remaining.length, \" (\", finished.length, \")\")) : null;\n}\n\nexport default FlashCards;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js"],"names":["React","useState","useEffect","List","Button","Player","_","Card","card","isMobile","isShowAnswer","setIsShowAnswer","isShowHint","setIsShowHint","console","log","hiragana","romaji","audioUrl","english","FlashCards","data","currentCardIndex","setCurrentCardIndex","remaining","filter","o","isLesson","finished","setNext","isRepeat","currentCard","textAlign","width","display","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;;AAGA,SAASC,IAAT,CAAc;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAd,EAA+B;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,IAAI,CAACQ,QAAlC,CADJ,EAIQJ,UAAU,GACN;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BJ,IAAI,CAACS,MAAjC,CADM,GAGN,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAE,MAAIJ,aAAa,CAAC,IAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPZ,EAWQL,IAAI,CAACU,QAAL,GACI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEV,IAAI,CAACU,QAAlB;AAA4B,IAAA,QAAQ,EAAET,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAGI,IAdZ,EAkBQC,YAAY,GACR;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,IAAI,CAACW,OAAnC,CADQ,GAGR,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAIR,eAAe,CAAC,IAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBArBZ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CADJ;AA2BH;;AAED,SAASS,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA2B;AACvB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CtB,QAAQ,CAAC,CAAD,CAAxD;;AACA,QAAMuB,SAAS,GAAGlB,CAAC,CAACmB,MAAF,CAASJ,IAAT,EAAeK,CAAC,IAAI;AAClC,WAAO,CAACA,CAAC,CAACC,QAAV;AACH,GAFiB,CAAlB;;AAGA,QAAMC,QAAQ,GAAGtB,CAAC,CAACmB,MAAF,CAASJ,IAAT,EAAeK,CAAC,IAAI;AACjC,WAAOA,CAAC,CAACC,QAAT;AACH,GAFgB,CAAjB;;AAIA,WAASE,OAAT,CAAiBC,QAAjB,EAA0B;AACtB,QAAG,CAACA,QAAJ,EAAa,CACT;AACH;;AACDP,IAAAA,mBAAmB,CAACD,gBAAgB,GAAC,CAAlB,CAAnB;AACH;;AAED,QAAMS,WAAW,GAAGP,SAAS,CAACF,gBAAD,CAA7B;AACA,SAAOS,WAAW,GACd;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAE,MAAV;AAAkBD,MAAAA,KAAK,EAAE,MAAzB;AAAgCD,MAAAA,SAAS,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAE,MAAIH,OAAO,CAAC,IAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE,MAAIA,OAAO,CAAC,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CALJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,gBAAgB,GAAC,CAAvB,SAA6BE,SAAS,CAACW,MAAvC,QAAiDP,QAAQ,CAACO,MAA1D,MAdJ,CADc,GAiBd,IAjBJ;AAkBH;;AAED,eAAef,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\n\nfunction Card({card, isMobile}){\n    const [isShowAnswer, setIsShowAnswer] = useState(false);\n    const [isShowHint, setIsShowHint] = useState(false);\n\n    console.log(isShowAnswer)\n\n    return (\n        <div>\n            <div className=\"study-text\">{card.hiragana}</div>\n\n            {\n                isShowHint ? \n                    <div className=\"hint-text\">{card.romaji}</div>\n                    :\n                    <Button color=\"secondary\" onClick={()=>setIsShowHint(true)}>Show Hint</Button>\n            }\n\n            {\n                card.audioUrl ?\n                    <Player url={card.audioUrl} controls={isMobile}></Player>\n                :\n                    null\n            }\n\n            {\n                isShowAnswer ? \n                    <div className=\"answer-text\">{card.english}</div>\n                    :\n                    <Button color=\"primary\" onClick={()=>setIsShowAnswer(true)}>Show Answer</Button>\n            }\n            <div></div>\n        </div>\n    )\n}\n\nfunction FlashCards({data}){\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\n    const remaining = _.filter(data, o => {\n        return !o.isLesson;\n    });\n    const finished = _.filter(data, o => {\n        return o.isLesson;\n    });\n\n    function setNext(isRepeat){\n        if(!isRepeat){\n            //dispatch with no repeat flag\n        }\n        setCurrentCardIndex(currentCardIndex+1);\n    }\n\n    const currentCard = remaining[currentCardIndex];\n    return currentCard ? (\n        <div style={{textAlign: 'center', width: '100%'}}>\n            <List>\n                <Card card={currentCard}></Card>\n            </List>\n\n            <div style={{display: 'flex', width: '100%',textAlign: 'center'}}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={()=>setNext(true)}>\n                    Repeat\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>setNext(false)}>\n                    Good\n                </Button>\n            </div>\n\n            <div>{currentCardIndex+1} / {remaining.length} ({finished.length})</div>\n        </div>\n    ) : null\n}\n\nexport default FlashCards;\n"]},"metadata":{},"sourceType":"module"}