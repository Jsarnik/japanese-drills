{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Player.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const audioItem = useRef(null);\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  console.log(audioItem);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    if (audioItem.current !== null) {\n      playing ? audioItem.current.play() : stopReset();\n    }\n  }, [playing, url]);\n\n  function stopReset() {\n    audioItem.current.pause();\n    audioItem.current.currentTime = 0;\n  }\n\n  useEffect(() => {\n    audioItem.current.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audioItem.current.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle, audioItem];\n};\n\nconst Player = ({\n  url,\n  controls\n}) => {\n  const _url = url.indexOf('http') === -1 ? `http://japanese-drills.s3.amazonaws.com/audio/${url}` : url;\n\n  const [playing, toggle, audioItem] = useAudio(_url);\n  return controls ? React.createElement(\"audio\", {\n    ref: audioItem,\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: _url,\n    type: \"audio/mpeg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, playing ? React.createElement(StopIcon, {\n    style: {\n      color: red[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : React.createElement(RecordVoiceOverIcon, {\n    style: {\n      color: green[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"audio\", {\n    ref: audioItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: _url,\n    type: \"audio/mpeg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Player.js"],"names":["React","useState","useEffect","useRef","StopIcon","RecordVoiceOverIcon","green","red","useAudio","url","audioItem","audio","Audio","playing","setPlaying","console","log","toggle","current","play","stopReset","pause","currentTime","addEventListener","removeEventListener","Player","controls","_url","indexOf","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const audioItem = useRef(null);\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  console.log(audioItem)\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      if(audioItem.current !== null){\n            playing ? audioItem.current.play() : stopReset();\n      }\n    },\n    [playing, url]\n  );\n\n  function stopReset(){\n    audioItem.current.pause();\n    audioItem.current.currentTime = 0;\n  }\n\n  useEffect(() => {\n    audioItem.current.addEventListener('ended', () => setPlaying(false));\n    return () => {\n        audioItem.current.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, audioItem];\n};\n\nconst Player = ({ url, controls }) => {\n  const _url = url.indexOf('http') === -1 ? `http://japanese-drills.s3.amazonaws.com/audio/${url}` : url;\n  const [playing, toggle, audioItem] = useAudio(_url);\n\n  return controls ? (\n    <audio ref={audioItem} controls>\n        <source src={_url} type=\"audio/mpeg\"/>\n    </audio>\n  ) : (\n    <div onClick={toggle}>\n        {\n            playing ? \n                <StopIcon style={{ color: red[500]}}></StopIcon>\n            :\n                <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n        }\n        <audio ref={audioItem}>\n            <source src={_url} type=\"audio/mpeg\"/>\n        </audio>\n    </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}