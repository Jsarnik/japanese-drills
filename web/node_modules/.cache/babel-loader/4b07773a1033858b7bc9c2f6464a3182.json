{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Questions.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\nconst defaultKeyShow = 'katakana';\n\nfunction Questions({\n  data\n}) {\n  const [selectedItem, setSelectedItem] = useState({\n    index: -1,\n    type: ''\n  });\n\n  function handleClick(val) {\n    setSelectedItem(val);\n  }\n\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Items, {\n    data: data,\n    handleClick: handleClick,\n    selectedItem: selectedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nfunction Items({\n  data,\n  handleClick,\n  selectedItem\n}) {\n  return data.map((item, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"question-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: `Q: ${item.question[defaultKeyShow]}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), item.question.audio ? React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      \"aria-label\": \"listen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Player, {\n      url: item.question.audio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))) : null), _.map(item.question, (question, key) => {\n      if (key !== defaultKeyShow && key !== 'audio') {\n        let isSelected = selectedItem.index === i && selectedItem.type === key;\n        let item = {\n          index: i,\n          type: key\n        };\n        return React.createElement(Question, {\n          question: question,\n          type: key,\n          clickFn: handleClick,\n          isSelected: isSelected,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }\n    })), React.createElement(\"div\", {\n      className: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: `A: ${item.answer[defaultKeyShow]}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), item.answer.audio ? React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      \"aria-label\": \"listen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(GraphicEqIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))) : null), _.map(item.answer, (answer, key) => {\n      if (key !== defaultKeyShow && key !== 'audio') {\n        let isSelected = selectedItem.index === i && selectedItem.type === key;\n        let item = {\n          index: i,\n          type: key\n        };\n        return React.createElement(Answer, {\n          answer: answer,\n          type: key,\n          clickFn: handleClick,\n          isSelected: isSelected,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }\n    })), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Question({\n  question,\n  type,\n  clickFn,\n  isSelected,\n  item\n}) {\n  const text = isSelected ? question : type;\n  return React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      clickFn(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, isSelected ? React.createElement(LockOpenIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }) : React.createElement(LockIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${text}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }));\n}\n\nfunction Answer({\n  answer,\n  type,\n  clickFn,\n  isSelected,\n  item\n}) {\n  const text = isSelected ? answer : type;\n  return React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      clickFn(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, isSelected ? React.createElement(LockOpenIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }) : React.createElement(LockIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${text}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Questions.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","LockOpenIcon","LockIcon","GraphicEqIcon","ListItemText","ListItemSecondaryAction","IconButton","Divider","Player","_","defaultKeyShow","Questions","data","selectedItem","setSelectedItem","index","type","handleClick","val","Items","map","item","i","display","justifyContent","question","audio","key","isSelected","answer","Question","clickFn","text","Answer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\nconst defaultKeyShow = 'katakana';\n\nfunction Questions({data}){\n    const [selectedItem, setSelectedItem] = useState({index: -1, type: ''});\n\n    function handleClick(val){\n        setSelectedItem(val);\n    }\n\n    return (\n        <List>\n            <Items data={data} handleClick={handleClick} selectedItem={selectedItem}></Items>\n        </List>\n    )\n}\n\nfunction Items({data, handleClick, selectedItem}){\n    return data.map((item, i) => {\n        return (\n            <div key={i} className=\"question-container\" style={{display: 'flex', justifyContent: 'space-between'}}>\n                <div className=\"question\">\n                    <ListItem>\n                        <ListItemText primary={`Q: ${item.question[defaultKeyShow]}`}/>\n                        {\n                            item.question.audio ?\n                                <ListItemSecondaryAction>\n                                    <IconButton edge=\"start\" aria-label=\"listen\">\n                                        <Player url={item.question.audio}></Player>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            :\n                                null\n                        }\n                    </ListItem>\n                    {\n                        _.map(item.question, (question, key) => {\n                            if(key !== defaultKeyShow && key !== 'audio'){\n                                let isSelected = selectedItem.index === i && selectedItem.type === key;\n                                let item = {index: i, type: key};\n                                return (\n                                    <Question question={question} type={key} clickFn={handleClick} isSelected={isSelected} item={item}></Question>\n                                )\n                            }\n                        })\n                    }\n                </div>\n                <div className=\"answer\">\n                    <ListItem>\n                        <ListItemText primary={`A: ${item.answer[defaultKeyShow]}`}/>\n                        {\n                            item.answer.audio ?\n                                <ListItemSecondaryAction>\n                                    <IconButton edge=\"start\" aria-label=\"listen\">\n                                        <GraphicEqIcon/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            :\n                            null\n                        }\n                    </ListItem>\n                    {\n                        _.map(item.answer, (answer, key) => {\n                            if(key !== defaultKeyShow && key !== 'audio'){\n                                let isSelected = selectedItem.index === i && selectedItem.type === key;\n                                let item = {index: i, type: key};\n                                return (\n                                    <Answer answer={answer} type={key} clickFn={handleClick} isSelected={isSelected} item={item}></Answer>\n                                )\n                            }\n                        })\n                    }\n                </div>\n                <Divider light />\n            </div>\n        )\n    });\n}\n\nfunction Question({question, type, clickFn, isSelected, item}){\n    const text = isSelected ? question : type;\n    return (\n        <ListItem button onClick={()=>{clickFn(item)}}>\n            <ListItemIcon>\n            {   \n                isSelected ?\n                    <LockOpenIcon />\n                :\n                    <LockIcon />\n            }\n            </ListItemIcon>\n            <ListItemText primary={`${text}`} />\n        </ListItem>\n    )\n}\n\nfunction Answer({answer, type, clickFn, isSelected, item}){\n    const text = isSelected ? answer : type;\n    return (\n        <ListItem button onClick={()=>{clickFn(item)}}>\n            <ListItemIcon>\n            {   \n                isSelected ?\n                    <LockOpenIcon />\n                :\n                    <LockIcon />\n            }\n            </ListItemIcon>\n            <ListItemText primary={`${text}`} />            \n        </ListItem>\n    )\n}\n\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}