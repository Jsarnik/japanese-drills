{"version":3,"sources":["reducers/cardsReducer.js","reducers/index.js","actions/actionTypes.js","globals.js","actions/cardActions.js","components/Directory.js","components/Player.js","components/FlashCards.js","components/useForm.js","components/useValidation.js","components/AddCard.js","components/EditCards.js","App.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["initialState","cards","appReducer","combineReducers","state","action","type","card","_id","rootReducer","config","baseApiUri","getCardsFailure","error","getCards","_type","url","options","dispatch","Promise","resolve","reject","axios","post","then","res","_data","data","dispatchFn","failed","catch","e","message","addCardFailure","updateCardFailure","deleteCardFailure","Directory","useDispatch","cacheKeys","useState","directoryModel","setDirectoryModel","useEffect","cardActions","model","_","key","s","split","lessonsCompleted","JSON","parse","localStorage","getItem","title","length","link","replace","completedCount","cardCount","Object","keys","o","icon","Card","CardContent","List","dir","ListItem","button","onClick","route","window","location","href","ListItemIcon","ListItemText","primary","style","color","Divider","Player","controls","_url","indexOf","Audio","audio","setAudio","playing","setPlaying","play","stopReset","pause","currentTime","addEventListener","removeEventListener","useAudio","toggle","audioPlayer","useRef","current","src","ref","red","green","GreenButton","withStyles","theme","root","backgroundColor","Button","BlueButton","blue","ACard","isMobile","isEnglishFirst","isShowAnswer","setIsShowAnswer","isShowRomaji","setIsShowRomaji","isShowNoKanji","setIsShowNoKanji","studyText","english","hiragana","answerText","audioUrl","className","no_kanji","romaji","withRouter","props","useSelector","cacheKey","match","params","lesson","currentCardIndex","setCurrentCardIndex","finishedIds","setFinishedIds","remaining","finished","setNext","isRepeat","f","push","currentCard","setItem","stringify","textAlign","width","variant","startIcon","toUpperCase","display","justifyContent","marginBottom","CardActions","marginRight","marginLeft","useForm","submitForm","validate","initValue","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleClearValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","AddCard","_card","setFormSubmit","err","console","log","id","onSubmit","Select","labelId","onChange","MenuItem","Input","aria-label","placeholder","Form","submitFn","deleteCardFn","handleSubmitReset","margin","FormLabel","float","htmltype","EditCards","c","k","App","setIsMobile","React","anchorEl","setAnchorEl","open","Boolean","handleClose","outerWidth","handleResize","passive","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","TransitionComponent","Fade","exact","path","render","to","hostname","store","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc0c2c78.chunk.js","sourcesContent":["import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {\n    cards: {}\n};\n\nexport default function adminReducer(state = initialState, action){\n    switch(action.type){\n        case types.GET_ALL_CARDS_SUCCESS:\n            return action.cards;\n\n        case types.SET_CARD_SUCCESS:\n            return {\n                ...state, [action.card._id]: action.card\n            }\n\n        case types.GET_ALL_CARDS_FAILURE:\n            return state;\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport cards from './cardsReducer';\n\nconst appReducer = combineReducers({\n    cards\n});\n\n// This is a catch all for logout = setting all stores back to initial state of the application;\nconst rootReducer = (state, action) => {\n    return appReducer(state, action)\n  }\n\nexport default rootReducer;","\nexport const GET_ALL_CARDS_SUCCESS = 'GET_ALL_CARDS_SUCCESS';\nexport const GET_ALL_CARDS_FAILURE = 'GET_ALL_CARDS_FAILURE';\n\nexport const SET_CARD_SUCCESS = 'SET_CARD_SUCCESS';\nexport const SET_CARD_FAILURE = 'SET_CARD_FAILURE';","\nconst config = {\n    baseApiUri: process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : ''\n};\n\nexport default config;\n","\nimport * as types from './actionTypes';\nimport config from '../globals';\nimport axios from 'axios';\n\nexport function getCardsSuccess(cards){\n    return {type: types.GET_ALL_CARDS_SUCCESS, cards};\n}\n\nexport function getCardsFailure(error){\n    return {type: types.GET_ALL_CARDS_FAILURE, error};\n}\n\nexport function getCards(_type){\n    let url = `${config.baseApiUri}/api/getCards`;\n    let options = {\n        type: _type\n    };\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? getCardsFailure(_data.failed, _data) : getCardsSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(getCardsFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function setCardSuccess(card){\n    return {type: types.SET_CARD_SUCCESS, card};\n}\n\nexport function setCardFailure(error){\n    return {type: types.SET_CARD_FAILURE, error};\n}\n\nexport function setCard(_card){\n    let url = `${config.baseApiUri}/api/setCard`;\n    let options = {\n        card: _card\n    };\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? setCardFailure(_data.failed, _data) : setCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(setCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function resetLessonSuccess(cards){\n    return {type: types.GET_ALL_CARDS_SUCCESS, cards};\n}\n\nexport function resetLessonFailure(error){\n    return {type: types.GET_ALL_CARDS_FAILURE, error};\n}\n\nexport function resetLesson(_card){\n    let url = `${config.baseApiUri}/api/resetLesson`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.get(url, {})\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? resetLessonFailure(_data.failed, _data) : resetLessonSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(resetLessonFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function addCardSuccess(card){\n    return {type: types.SET_CARD_SUCCESS, card};\n}\n\nexport function addCardFailure(error){\n    return {type: types.SET_CARD_FAILURE, error};\n}\n\nexport function addCard(_card){\n    let url = `${config.baseApiUri}/api/addCard`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, {\n                card: _card\n            })\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? addCardFailure(_data.failed, _data) : addCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(addCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function updateCardSuccess(card){\n    return {type: types.SET_CARD_SUCCESS, card};\n}\n\nexport function updateCardFailure(error){\n    return {type: types.SET_CARD_FAILURE, error};\n}\n\nexport function updateCard(_card){\n    let url = `${config.baseApiUri}/api/updateCard`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, {\n                card: _card\n            })\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? updateCardFailure(_data.failed, _data) : updateCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(updateCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function deleteCardSuccess(cards){\n    return {type: types.GET_ALL_CARDS_SUCCESS, cards};\n}\n\nexport function deleteCardFailure(error){\n    return {type: types.GET_ALL_CARDS_FAILURE, error};\n}\n\nexport function deleteCard(_card){\n    let url = `${config.baseApiUri}/api/deleteCard`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, {\n                card: _card\n            })\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? deleteCardFailure(_data.failed, _data) : deleteCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(deleteCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\n\n\nexport function setCachedLesson(key, values){\n    return function(dispatch){\n        localStorage.setItem(key, JSON.stringify(values));\n    }\n}\n\nexport function getCachedLesson(key){\n    return function(dispatch){\n        return localStorage.getItem(key);\n    }\n}","import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport GTranslateIcon from '@material-ui/icons/GTranslate';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport { useDispatch } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\n\nfunction Directory() {\n    const dispatch = useDispatch();\n    const cacheKeys = ['phrase', 'question', 'vocab', 'all','phrase-e', 'question-e', 'vocab-e', 'all-e'];\n    const [directoryModel, setDirectoryModel] = useState({});\n\n    useEffect(()=>{\n        dispatch(cardActions.getCards()).then(res=>{\n            let model = {};\n            _.each(cacheKeys, key => {\n                let s = key.split('-');\n                let lessonsCompleted = JSON.parse(localStorage.getItem(key)) || [];\n                model[key] = {\n                    title: s.length > 1 ? `${s[0]}: ( English > Japanese )` : `${s[0]}: ( Japanese > English )`,\n                    link: key.replace('-','/'),\n                    completedCount:  lessonsCompleted.length,\n                    cardCount: s[0] === 'all' ? Object.keys(res).length : _.filter(res, o=>{return o.type === s[0]}).length || 0,\n                    icon: s.length > 1 ? <GTranslateIcon/> : <TranslateIcon/>\n                }\n            });\n            setDirectoryModel(model);\n        });\n    },[]);\n    \n    function link(route){\n        window.location.href = `/flashcards/${route}`;\n    }\n\n    return (\n        <Card>\n            <CardContent>\n                <List>\n                    {\n                        _.map(directoryModel, dir => {\n                            return (\n                                <div key={dir.link}>\n                                    <ListItem button onClick={()=>link(dir.link)}>\n                                        <ListItemIcon>\n                                           {dir.icon}\n                                        </ListItemIcon>\n                                        <ListItemText primary={dir.title}/>\n                                        <span><span style={{color: '#3f51b5'}}>{dir.cardCount} </span> <span> / </span> <span style={{color: '#4caf50'}}> {dir.completedCount}</span></span>\n                                    </ListItem>\n                                    <Divider></Divider>\n                                </div>\n                            )\n                        })\n                    }\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Directory;","import React, { useState, useEffect, useRef } from \"react\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const [audio, setAudio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  useEffect(()=>{\n    if(audio !== null){\n          playing ? audio.play() : stopReset();\n    }\n    setAudio(new Audio(url));\n    setPlaying(false);\n  }, [url])\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      if(audio !== null){\n            playing ? audio.play() : stopReset();\n      }\n    },\n    [playing]\n  );\n\n  function stopReset(){\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, audio];\n};\n\nconst Player = ({ url, controls }) => {\n  const _url = url.indexOf('http') === -1 ? `http://japanese-drills.s3.amazonaws.com/audio/${url}` : url;\n  const [playing, toggle] = useAudio(_url);\n  let audioPlayer = useRef(null);\n\n  useEffect(()=>{\n    if(audioPlayer && audioPlayer.current){\n      audioPlayer.current.src = _url;\n    }\n  }, [url])\n\n  return controls ? (\n    <audio controls ref={audioPlayer}>\n        <source src={_url} type=\"audio/mpeg\"/>\n    </audio>\n  ) : (\n    <div onClick={toggle}>\n        {\n            playing ? \n                <StopIcon style={{ color: red[500]}}></StopIcon>\n            :\n                <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n        }\n    </div>\n  );\n};\n\nexport default Player;","import React, {useState, useEffect} from 'react';\nimport * as cardActions from '../actions/cardActions';\nimport {withRouter} from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\n\nconst GreenButton = withStyles(theme => ({\n    root: {\n      color: green['A700'],\n      backgroundColor: '#fff',\n      '&:hover': {\n        backgroundColor: green[50],\n      },\n    },\n  }))(Button);\n\n  const BlueButton = withStyles(theme => ({\n    root: {\n      color: blue['A700'],\n      backgroundColor: '#fff',\n      '&:hover': {\n        backgroundColor: blue[50],\n      },\n    },\n  }))(Button);\n\nfunction ACard({card, isMobile, isEnglishFirst}){\n    const [isShowAnswer, setIsShowAnswer] = useState(false);\n    const [isShowRomaji, setIsShowRomaji] = useState(false);\n    const [isShowNoKanji, setIsShowNoKanji] = useState(false);\n\n    useEffect(()=>{\n        setIsShowAnswer(false);\n        setIsShowRomaji(false);\n        setIsShowNoKanji(false);\n    }, [card])\n\n    const studyText = isEnglishFirst ? card.english : card.hiragana;\n    const answerText = isEnglishFirst ? card.hiragana : card.english;\n\n    return (\n        <div>\n            {\n                card.audioUrl ?\n                    <Player url={card.audioUrl} controls={isMobile}></Player>\n                :\n                    null\n            }\n            \n            <div className=\"study-text\">{studyText}</div>\n\n            {\n                isShowNoKanji ? \n                    <div className=\"hint-text\">{card.no_kanji}</div>\n                    :\n                    <div>\n                        <Button color=\"secondary\" onClick={()=>setIsShowNoKanji(true)}>Show No Kanji</Button>\n                    </div>\n                    \n            }\n\n            {\n                isShowRomaji ? \n                    <div className=\"romaji-text\">{card.romaji}</div>\n                    :\n                    <div>\n                        <BlueButton color=\"secondary\" onClick={()=>setIsShowRomaji(true)}>Show Romaji</BlueButton> \n                    </div>\n                    \n            }\n\n            {\n                isShowAnswer ? \n                    <div className=\"answer-text\">{answerText}</div>\n                    :\n                    <div>\n                        <GreenButton color=\"primary\" onClick={()=>setIsShowAnswer(true)}>Show Answer</GreenButton>\n                    </div>\n            }\n        </div>\n    )\n}\n\nfunction FlashCards(props){\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const cacheKey = `${props.match.params.lesson}${props.isEnglishFirst ? '-e' : ''}`;\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\n    const [finishedIds, setFinishedIds] = useState(JSON.parse(localStorage.getItem(cacheKey)) || []);\n\n    const remaining = _.filter(data, o => {\n        return finishedIds.indexOf(o._id) === -1;\n    });\n    const finished = _.filter(data, o => {\n        return finishedIds.indexOf(o._id) !== -1;\n    });\n\n    useEffect(()=>{\n        let type = props.match.params.lesson === 'all' ? null : props.match.params.lesson;\n        dispatch(cardActions.getCards(type));\n    },[]);\n\n    function resetLesson(){\n        setCurrentCardIndex(0);\n        localStorage.setItem(cacheKey, JSON.stringify([]));\n        setFinishedIds([])\n    }\n\n    function setNext(isRepeat){\n        if(currentCardIndex+1 < remaining.length){\n            if(!isRepeat){\n                let f = [...finishedIds];\n                f.push(currentCard._id);\n                setFinishedIds(f);\n                localStorage.setItem(cacheKey, JSON.stringify(finishedIds));\n            }else{\n                setCurrentCardIndex(currentCardIndex+1);\n            }\n        }else{\n            setCurrentCardIndex(0);\n        }\n    }\n    \n    let currentCard = {...remaining[currentCardIndex]};\n\n    return !_.isEmpty(currentCard) ? (\n        <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">\n            {\n                finished.length > 0 ?\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<ReplayIcon />}\n                            onClick={resetLesson}\n                        >\n                            Reset Lesson\n                        </Button>\n                    </div>\n                :\n                    null\n            }\n\n            <div>{props.match.params.lesson.toUpperCase()}</div>\n            <div style={{display: 'flex', justifyContent: 'space-evenly', marginBottom: '50px'}}>\n                <div><span>{currentCardIndex+1}</span> / <span className=\"remaining\">{remaining.length} </span> / <span className=\"finished\">{finished.length}</span></div>\n            </div>\n\n            <Card>\n                <CardContent>\n                    <ACard card={currentCard} isMobile={props.isMobile} isEnglishFirst={props.isEnglishFirst}></ACard>\n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n                        <div style={{marginRight: '5px'}}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setNext(false)}>\n                                Good\n                            </Button>\n                        </div>\n                        <div style={{marginLeft: '5px'}}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>setNext(true)}>\n                                Revisit\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </div>\n    ) : <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">No Cards</div>\n}\n\nexport default withRouter(FlashCards);\n","import { useState, useEffect } from 'react';\n\n\nconst useForm = (submitForm, validate, initValue) => {\n\n    const [values, setValues] = useState(initValue);\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            submitForm();\n        }\n      }, [errors, isSubmitting]);\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setIsSubmitting(true);\n        setErrors(validate(values));\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setIsSubmitting(false);\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n        if(errors[event.target.name]){\n            setErrors(validate({ ...values, [event.target.name]: event.target.value }));\n        }\n    };\n\n    const handleClearValues = () => {\n        setValues({});\n        setIsSubmitting(false)\n    }\n\n    return {\n        handleClearValues,\n        handleChange,\n        handleSubmit,\n        values,\n        errors\n    }\n};\n\nexport default useForm;","export default function validate(values) {\n    let errors = {};\n\n    if (!values.hiragana) {\n        errors.hiragana = true;\n    }\n\n    if (!values.romaji) {\n        errors.romaji = true;\n    }\n\n    if (!values.english) {\n        errors.english = true;\n    }\n\n    if (!values.type) {\n        errors.type = true;\n    }\n\n    return errors;\n  };","import React, {useState} from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nfunction AddCard() {\n    const { errors, values, handleChange, handleSubmit, handleClearValues } = useForm(submit, validate, {});\n    const dispatch = useDispatch();\n\n    const [isFormSubmit, setFormSubmit] = useState(false);\n\n    function submit(){\n        dispatch(cardActions.addCard(values)).then(res=>{\n            handleSubmitReset();\n        }).catch(err => {\n            console.log(err);\n        });\n\n    }\n\n    function handleSubmitReset(){\n        setFormSubmit(true);\n        handleClearValues();\n    }\n\n    return (\n        <form id=\"addCardForm\" onSubmit={handleSubmit} >\n            <div>\n                <Select\n                    labelId=\"Type\"\n                    id=\"type-select\"\n                    value={values.type || ''}\n                    name=\"type\"\n                    onChange={handleChange}\n                >\n                    <MenuItem value={'phrase'}>Phrase</MenuItem>\n                    <MenuItem value={'question'}>Question</MenuItem>\n                    <MenuItem value={'vocab'}>Vocab</MenuItem>\n                </Select>\n                {\n                    errors.type ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n            <div>\n                <Input aria-label=\"hiragana\" className={`${errors.hiragana ? 'error' : ''}`} type=\"text\" placeholder=\"hiragana\" name=\"hiragana\" onChange={handleChange} value={values.hiragana || ''} />\n                {\n                    errors.hiragana ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"no_kanji\" className=\"\" type=\"text\" placeholder=\"no_kanji\" name=\"no_kanji\" onChange={handleChange} value={values.no_kanji || ''} />\n                {\n                    errors.no_kanji ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"romaji\" className=\"\" type=\"text\" placeholder=\"romaji\" name=\"romaji\" onChange={handleChange} value={values.romaji || ''} />\n                {\n                    errors.romaji ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"english\" className={`${errors.english ? 'error' : ''}`} type=\"text\" placeholder=\"english\" name=\"english\" onChange={handleChange} value={values.english || ''} />\n                {\n                    errors.english ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <Button type=\"primary\" color=\"primary\" aria-label=\"submit\" type=\"submit\" htmltype=\"submit\" className=\"submit-button\">\n                Save\n            </Button>\n        </form>\n    )\n}\n\nexport default AddCard;","import React, {useState, useEffect} from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nfunction Form({card, submitFn, deleteCardFn}){\n    const { errors, values, handleChange, handleSubmit, handleClearValues } = useForm(submit, validate, card);\n\n    console.log(card)\n\n    function submit(){\n        submitFn(values).then(res=>{\n            handleSubmitReset();\n        }).catch(err =>{\n            handleSubmitReset();\n        });\n    }\n\n    function handleSubmitReset(){\n        handleClearValues();\n    }\n    return (\n        <form id=\"addCardForm\" onSubmit={handleSubmit}>\n            <Card style={{margin: \"50px 0px\"}} >\n                <CardContent>\n                    <div>\n                        <FormLabel>type:</FormLabel>\n                        <Select\n                            labelId=\"Type\"\n                            id=\"type-select\"\n                            value={values.type || ''}\n                            name=\"type\"\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'phrase'}>Phrase</MenuItem>\n                            <MenuItem value={'question'}>Question</MenuItem>\n                            <MenuItem value={'vocab'}>Vocab</MenuItem>\n                        </Select>\n                        {\n                            errors.type ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n                    <div>\n                        <FormLabel>hiragana:</FormLabel>\n                        <Input aria-label=\"hiragana\" className={`${errors.hiragana ? 'error' : ''}`} type=\"text\" placeholder=\"hiragana\" name=\"hiragana\" onChange={handleChange} value={values.hiragana || ''} />\n                        {\n                            errors.hiragana ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>no kanji:</FormLabel>\n                        <Input aria-label=\"no_kanji\" className=\"\" type=\"text\" placeholder=\"no_kanji\" name=\"no_kanji\" onChange={handleChange} value={values.no_kanji || ''} />\n                        {\n                            errors.no_kanji ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>romaji:</FormLabel>\n                        <Input aria-label=\"romaji\" className=\"\" type=\"text\" placeholder=\"romaji\" name=\"romaji\" onChange={handleChange} value={values.romaji || ''} />\n                        {\n                            errors.romaji ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>english:</FormLabel>\n                        <Input aria-label=\"english\" className={`${errors.english ? 'error' : ''}`} type=\"text\" placeholder=\"english\" name=\"english\" onChange={handleChange} value={values.english || ''} />\n                        {\n                            errors.english ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n              \n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', justifyContent:'space-evenly', width: '100%'}}>\n                        <div>\n                            <Button\n                                color=\"secondary\"\n                                startIcon={<DeleteIcon />}\n                                onClick={()=>deleteCardFn(card)}\n                            >\n                                Delete\n                            </Button>\n                        </div>\n                        <div>\n                            <Button style={{float: 'right'}} color=\"primary\" aria-label=\"submit\" type=\"submit\" htmltype=\"submit\" className=\"submit-button\">\n                                Save\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </form>\n    )\n}\n\nfunction EditCards() {\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const submitFn = (values) =>  dispatch(cardActions.updateCard(values));\n    const deleteCardFn = (_card) =>  dispatch(cardActions.deleteCard(_card));\n\n    useEffect(()=>{\n        dispatch(cardActions.getCards());\n    },[]);\n\n    return data ? (\n        <div>\n        {\n            _.map(data, (c, k) => {\n                return (<Form card={{...c}} key={k} submitFn={submitFn} deleteCardFn={deleteCardFn}></Form>)\n            })\n        }\n        </div>\n    ) : null\n}\n\nexport default EditCards;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Directory from './components/Directory';\nimport FlashCards from './components/FlashCards';\nimport AddCard from './components/AddCard';\nimport EditCards from './components/EditCards';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fade from '@material-ui/core/Fade';\nimport * as _ from 'lodash';\n\nfunction App() {\n  const [isMobile, setIsMobile] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    setIsMobile(window.outerWidth <= 767);\n\n    const handleResize = () => {\n      setIsMobile(window.outerWidth <= 767);\n    };\n\n    window.addEventListener(\"resize\", handleResize, { passive: true });\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize, true);\n    }\n  },[]);\n\n  return (\n    <div className=\"App\" style={{width: '85%', margin: '0 auto'}}>      \n      <BrowserRouter>\n          <header style={{textAlign: 'left'}}>\n          <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            Menu\n          </Button>\n          <Menu\n            id=\"fade-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={handleClose}\n            TransitionComponent={Fade}\n          >\n            <a href=\"/\"><MenuItem onClick={handleClose}>Lessons</MenuItem></a>\n            <a href=\"/add\"><MenuItem onClick={handleClose}>Add</MenuItem></a>\n            <a href=\"/edit\"><MenuItem onClick={handleClose}>Edit</MenuItem></a>\n          </Menu>\n          </header>\n          <main className=\"main-content\">\n              <Switch>\n                  <Route exact path=\"/\" render={(props) => <Directory/>} />\n                  <Route exact path=\"/flashcards/:lesson\" render={(props) => <FlashCards isMobile={isMobile}/>} />\n                  <Route exact path=\"/flashcards/:lesson/e\" render={(props) => <FlashCards isMobile={isMobile} isEnglishFirst={true} />} />\n                  <Route exact path=\"/add\" render={(props) => <AddCard isMobile={isMobile}/>} />\n                  <Route exact path=\"/edit\" render={(props) => <EditCards isMobile={isMobile}/>} />\n                  <Redirect to=\"/\"/>\n              </Switch>\n          </main>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n, \ndocument.getElementById('root'));\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState){\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk, reduxImmutableStateInvariant())\n    );\n}"],"sourceRoot":""}