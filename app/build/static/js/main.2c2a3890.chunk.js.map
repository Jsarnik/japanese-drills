{"version":3,"sources":["reducers/cardsReducer.js","reducers/index.js","actions/actionTypes.js","globals.js","actions/cardActions.js","components/Directory.js","components/Player.js","components/FlashCards.js","components/useForm.js","components/useValidation.js","components/AddCard.js","components/EditCards.js","App.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["initialState","cards","appReducer","combineReducers","state","action","type","card","_id","rootReducer","config","baseApiUri","getCardsFailure","error","getCards","_type","url","options","dispatch","Promise","resolve","reject","axios","post","then","res","_data","data","dispatchFn","failed","catch","e","message","setCardFailure","resetLessonFailure","addCardFailure","updateCardFailure","deleteCardFailure","Directory","useSelector","useDispatch","_all","Object","keys","length","_phrase","_","o","_question","_vocab","link","route","window","location","href","useEffect","cardActions","Card","CardContent","List","ListItem","button","onClick","ListItemIcon","ListItemText","primary","Divider","Player","controls","_url","indexOf","useState","Audio","audio","setAudio","playing","setPlaying","play","stopReset","pause","currentTime","addEventListener","removeEventListener","useAudio","toggle","audioPlayer","useRef","current","src","ref","style","color","red","green","GreenButton","withStyles","theme","root","backgroundColor","Button","BlueButton","blue","ACard","isMobile","isEnglishFirst","isShowAnswer","setIsShowAnswer","isShowRomaji","setIsShowRomaji","isShowNoKanji","setIsShowNoKanji","studyText","english","hiragana","answerText","audioUrl","className","no_kanji","romaji","withRouter","props","currentCardIndex","setCurrentCardIndex","remaining","isLesson","finished","setNext","isRepeat","currentCard","_card","match","params","lesson","textAlign","width","variant","startIcon","get","toUpperCase","display","justifyContent","marginBottom","CardActions","marginRight","marginLeft","useForm","submitForm","validate","initValue","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleClearValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","AddCard","setFormSubmit","err","console","log","id","onSubmit","Select","labelId","onChange","MenuItem","Input","aria-label","placeholder","Form","submitFn","deleteCardFn","handleSubmitReset","margin","FormLabel","float","htmltype","EditCards","c","k","key","App","setIsMobile","React","anchorEl","setAnchorEl","open","Boolean","handleClose","outerWidth","handleResize","passive","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","TransitionComponent","Fade","exact","path","render","to","hostname","store","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c2a3890.chunk.js","sourcesContent":["import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {\n    cards: {}\n};\n\nexport default function adminReducer(state = initialState, action){\n    switch(action.type){\n        case types.GET_ALL_CARDS_SUCCESS:\n            return action.cards;\n\n        case types.SET_CARD_SUCCESS:\n            return {\n                ...state, [action.card._id]: action.card\n            }\n\n        case types.GET_ALL_CARDS_FAILURE:\n            return state;\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport cards from './cardsReducer';\n\nconst appReducer = combineReducers({\n    cards\n});\n\n// This is a catch all for logout = setting all stores back to initial state of the application;\nconst rootReducer = (state, action) => {\n    return appReducer(state, action)\n  }\n\nexport default rootReducer;","\nexport const GET_ALL_CARDS_SUCCESS = 'GET_ALL_CARDS_SUCCESS';\nexport const GET_ALL_CARDS_FAILURE = 'GET_ALL_CARDS_FAILURE';\n\nexport const SET_CARD_SUCCESS = 'SET_CARD_SUCCESS';\nexport const SET_CARD_FAILURE = 'SET_CARD_FAILURE';","\nconst config = {\n    baseApiUri: process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : ''\n};\n\nexport default config;\n","\nimport * as types from './actionTypes';\nimport config from '../globals';\nimport axios from 'axios';\n\nexport function getCardsSuccess(cards){\n    return {type: types.GET_ALL_CARDS_SUCCESS, cards};\n}\n\nexport function getCardsFailure(error){\n    return {type: types.GET_ALL_CARDS_FAILURE, error};\n}\n\nexport function getCards(_type){\n    let url = `${config.baseApiUri}/api/getCards`;\n    let options = {\n        type: _type\n    };\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? getCardsFailure(_data.failed, _data) : getCardsSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(getCardsFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function setCardSuccess(card){\n    return {type: types.SET_CARD_SUCCESS, card};\n}\n\nexport function setCardFailure(error){\n    return {type: types.SET_CARD_FAILURE, error};\n}\n\nexport function setCard(_card){\n    let url = `${config.baseApiUri}/api/setCard`;\n    let options = {\n        card: _card\n    };\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? setCardFailure(_data.failed, _data) : setCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(setCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function resetLessonSuccess(cards){\n    return {type: types.GET_ALL_CARDS_SUCCESS, cards};\n}\n\nexport function resetLessonFailure(error){\n    return {type: types.GET_ALL_CARDS_FAILURE, error};\n}\n\nexport function resetLesson(_card){\n    let url = `${config.baseApiUri}/api/resetLesson`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.get(url, {})\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? resetLessonFailure(_data.failed, _data) : resetLessonSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(resetLessonFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function addCardSuccess(card){\n    return {type: types.SET_CARD_SUCCESS, card};\n}\n\nexport function addCardFailure(error){\n    return {type: types.SET_CARD_FAILURE, error};\n}\n\nexport function addCard(_card){\n    let url = `${config.baseApiUri}/api/addCard`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, {\n                card: _card\n            })\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? addCardFailure(_data.failed, _data) : addCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(addCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function updateCardSuccess(card){\n    return {type: types.SET_CARD_SUCCESS, card};\n}\n\nexport function updateCardFailure(error){\n    return {type: types.SET_CARD_FAILURE, error};\n}\n\nexport function updateCard(_card){\n    let url = `${config.baseApiUri}/api/updateCard`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, {\n                card: _card\n            })\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? updateCardFailure(_data.failed, _data) : updateCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(updateCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function deleteCardSuccess(cards){\n    return {type: types.GET_ALL_CARDS_SUCCESS, cards};\n}\n\nexport function deleteCardFailure(error){\n    return {type: types.GET_ALL_CARDS_FAILURE, error};\n}\n\nexport function deleteCard(_card){\n    let url = `${config.baseApiUri}/api/deleteCard`;\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, {\n                card: _card\n            })\n            .then(res => {\n                let _data = res.data;\n                let dispatchFn = _data.failed ? deleteCardFailure(_data.failed, _data) : deleteCardSuccess(_data);\n                dispatch(dispatchFn);\n                resolve(_data);\n            }).catch(e => {\n                dispatch(deleteCardFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}","import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\n\nfunction Directory() {\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const _all =  Object.keys(data).length || 0;\n    const _phrase =  _.filter(data, o=>{return o.type === 'phrase'}).length || 0;\n    const _question =  _.filter(data, o=>{return o.type === 'question'}).length || 0;\n    const _vocab =  _.filter(data, o=>{return o.type === 'vocab'}).length || 0;\n\n    useEffect(()=>{\n        dispatch(cardActions.getCards());\n    },[]);\n    \n    function link(route){\n        window.location.href = `/flashcards/${route}`;\n    }\n\n    return (\n        <Card>\n            <CardContent>\n                <List>\n                    <ListItem button onClick={()=>link('phrase')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'phrases ( japanese -> english )'}/>\n                        {_phrase}\n                    </ListItem>\n                    <ListItem button onClick={()=>link('question')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'questions ( japanese -> english )'}/>\n                        {_question}\n                    </ListItem>\n                    <ListItem button onClick={()=>link('vocab')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'vocab ( japanese -> english )'}/>\n                        {_vocab}\n                    </ListItem>\n                    <ListItem button onClick={()=>link('all')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'all ( japanese -> english )'}/>\n                        {_all}\n                    </ListItem>\n\n                    <Divider></Divider>\n\n                    <ListItem button onClick={()=>link('phrase/e')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'phrases ( english -> japanese )'}/>\n                        {_phrase}\n                    </ListItem>\n                    <ListItem button onClick={()=>link('question/e')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'questions ( english -> japanese )'}/>\n                        {_question}\n                    </ListItem>\n                    <ListItem button onClick={()=>link('vocab/e')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'vocab ( english -> japanese )'}/>\n                        {_vocab}\n                    </ListItem>\n                    <ListItem button onClick={()=>link('all/e')}>\n                        <ListItemIcon>\n                            <FeedbackIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={'all ( english -> japanese )'}/>\n                        {_all}\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Directory;","import React, { useState, useEffect, useRef } from \"react\";\nimport StopIcon from '@material-ui/icons/Stop';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const [audio, setAudio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  useEffect(()=>{\n    if(audio !== null){\n          playing ? audio.play() : stopReset();\n    }\n    setAudio(new Audio(url));\n    setPlaying(false);\n  }, [url])\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      if(audio !== null){\n            playing ? audio.play() : stopReset();\n      }\n    },\n    [playing]\n  );\n\n  function stopReset(){\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, audio];\n};\n\nconst Player = ({ url, controls }) => {\n  const _url = url.indexOf('http') === -1 ? `http://japanese-drills.s3.amazonaws.com/audio/${url}` : url;\n  const [playing, toggle] = useAudio(_url);\n  let audioPlayer = useRef(null);\n\n  useEffect(()=>{\n    if(audioPlayer && audioPlayer.current){\n      audioPlayer.current.src = _url;\n    }\n  }, [url])\n\n  return controls ? (\n    <audio controls ref={audioPlayer}>\n        <source src={_url} type=\"audio/mpeg\"/>\n    </audio>\n  ) : (\n    <div onClick={toggle}>\n        {\n            playing ? \n                <StopIcon style={{ color: red[500]}}></StopIcon>\n            :\n                <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n        }\n    </div>\n  );\n};\n\nexport default Player;","import React, {useState, useEffect} from 'react';\nimport * as cardActions from '../actions/cardActions';\nimport {withRouter} from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\n\nconst GreenButton = withStyles(theme => ({\n    root: {\n      color: green['A700'],\n      backgroundColor: '#fff',\n      '&:hover': {\n        backgroundColor: green[50],\n      },\n    },\n  }))(Button);\n\n  const BlueButton = withStyles(theme => ({\n    root: {\n      color: blue['A700'],\n      backgroundColor: '#fff',\n      '&:hover': {\n        backgroundColor: blue[50],\n      },\n    },\n  }))(Button);\n\nfunction ACard({card, isMobile, isEnglishFirst}){\n    const [isShowAnswer, setIsShowAnswer] = useState(false);\n    const [isShowRomaji, setIsShowRomaji] = useState(false);\n    const [isShowNoKanji, setIsShowNoKanji] = useState(false);\n\n    useEffect(()=>{\n        setIsShowAnswer(false);\n        setIsShowRomaji(false);\n        setIsShowNoKanji(false);\n    }, [card])\n\n    const studyText = isEnglishFirst ? card.english : card.hiragana;\n    const answerText = isEnglishFirst ? card.hiragana : card.english;\n\n    return (\n        <div>\n            {\n                card.audioUrl ?\n                    <Player url={card.audioUrl} controls={isMobile}></Player>\n                :\n                    null\n            }\n            \n            <div className=\"study-text\">{studyText}</div>\n\n            {\n                isShowNoKanji ? \n                    <div className=\"hint-text\">{card.no_kanji}</div>\n                    :\n                    <div>\n                        <Button color=\"secondary\" onClick={()=>setIsShowNoKanji(true)}>Show No Kanji</Button>\n                    </div>\n                    \n            }\n\n            {\n                isShowRomaji ? \n                    <div className=\"romaji-text\">{card.romaji}</div>\n                    :\n                    <div>\n                        <BlueButton color=\"secondary\" onClick={()=>setIsShowRomaji(true)}>Show Romaji</BlueButton> \n                    </div>\n                    \n            }\n\n            {\n                isShowAnswer ? \n                    <div className=\"answer-text\">{answerText}</div>\n                    :\n                    <div>\n                        <GreenButton color=\"primary\" onClick={()=>setIsShowAnswer(true)}>Show Answer</GreenButton>\n                    </div>\n            }\n        </div>\n    )\n}\n\nfunction FlashCards(props){\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\n    const remaining = _.filter(data, o => {\n        return !o.isLesson;\n    });\n    const finished = _.filter(data, o => {\n        return o.isLesson;\n    });\n\n    useEffect(()=>{\n        let type = props.match.params.lesson === 'all' ? null : props.match.params.lesson;\n        dispatch(cardActions.getCards(type));\n    },[]);\n\n    function resetLesson(){\n        dispatch(cardActions.resetLesson());\n        setCurrentCardIndex(0);\n    }\n\n    function setNext(isRepeat){\n        if(currentCardIndex+1 < remaining.length){\n            if(!isRepeat){\n                currentCard.isLesson = true;\n                dispatch(cardActions.setCard(currentCard));\n            }else{\n                setCurrentCardIndex(currentCardIndex+1);\n            }\n        }else{\n            setCurrentCardIndex(0);\n        }\n    }\n    \n    let currentCard = {...remaining[currentCardIndex]};\n    \n    return !_.isEmpty(currentCard) ? (\n        <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">\n            {\n                finished.length > 0 ?\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<ReplayIcon />}\n                            onClick={resetLesson}\n                        >\n                            Reset Lesson\n                        </Button>\n                    </div>\n                :\n                    null\n            }\n\n            <div>{props.match.params.lesson.toUpperCase()}</div>\n            <div style={{display: 'flex', justifyContent: 'space-evenly', marginBottom: '50px'}}>\n                <div><span>{currentCardIndex+1}</span> / <span className=\"remaining\">{remaining.length} </span> / <span className=\"finished\">{finished.length}</span></div>\n            </div>\n\n            <Card>\n                <CardContent>\n                    <ACard card={currentCard} isMobile={props.isMobile} isEnglishFirst={props.isEnglishFirst}></ACard>\n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n                        <div style={{marginRight: '5px'}}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setNext(false)}>\n                                Good\n                            </Button>\n                        </div>\n                        <div style={{marginLeft: '5px'}}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>setNext(true)}>\n                                Revisit\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </div>\n    ) : <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">No Cards</div>\n}\n\nexport default withRouter(FlashCards);\n","import { useState, useEffect } from 'react';\n\n\nconst useForm = (submitForm, validate, initValue) => {\n\n    const [values, setValues] = useState(initValue);\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            submitForm();\n        }\n      }, [errors, isSubmitting]);\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setIsSubmitting(true);\n        setErrors(validate(values));\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setIsSubmitting(false);\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n        if(errors[event.target.name]){\n            setErrors(validate({ ...values, [event.target.name]: event.target.value }));\n        }\n    };\n\n    const handleClearValues = () => {\n        setValues({});\n        setIsSubmitting(false)\n    }\n\n    return {\n        handleClearValues,\n        handleChange,\n        handleSubmit,\n        values,\n        errors\n    }\n};\n\nexport default useForm;","export default function validate(values) {\n    let errors = {};\n\n    if (!values.hiragana) {\n        errors.hiragana = true;\n    }\n\n    if (!values.romaji) {\n        errors.romaji = true;\n    }\n\n    if (!values.english) {\n        errors.english = true;\n    }\n\n    if (!values.type) {\n        errors.type = true;\n    }\n\n    return errors;\n  };","import React, {useState} from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nfunction AddCard() {\n    const { errors, values, handleChange, handleSubmit, handleClearValues } = useForm(submit, validate, {});\n    const dispatch = useDispatch();\n\n    const [isFormSubmit, setFormSubmit] = useState(false);\n\n    function submit(){\n        dispatch(cardActions.addCard(values)).then(res=>{\n            handleSubmitReset();\n        }).catch(err => {\n            console.log(err);\n        });\n\n    }\n\n    function handleSubmitReset(){\n        setFormSubmit(true);\n        handleClearValues();\n    }\n\n    return (\n        <form id=\"addCardForm\" onSubmit={handleSubmit} >\n            <div>\n                <Select\n                    labelId=\"Type\"\n                    id=\"type-select\"\n                    value={values.type || ''}\n                    name=\"type\"\n                    onChange={handleChange}\n                >\n                    <MenuItem value={'phrase'}>Phrase</MenuItem>\n                    <MenuItem value={'question'}>Question</MenuItem>\n                    <MenuItem value={'vocab'}>Vocab</MenuItem>\n                </Select>\n                {\n                    errors.type ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n            <div>\n                <Input aria-label=\"hiragana\" className={`${errors.hiragana ? 'error' : ''}`} type=\"text\" placeholder=\"hiragana\" name=\"hiragana\" onChange={handleChange} value={values.hiragana || ''} />\n                {\n                    errors.hiragana ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"no_kanji\" className=\"\" type=\"text\" placeholder=\"no_kanji\" name=\"no_kanji\" onChange={handleChange} value={values.no_kanji || ''} />\n                {\n                    errors.no_kanji ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"romaji\" className=\"\" type=\"text\" placeholder=\"romaji\" name=\"romaji\" onChange={handleChange} value={values.romaji || ''} />\n                {\n                    errors.romaji ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"english\" className={`${errors.english ? 'error' : ''}`} type=\"text\" placeholder=\"english\" name=\"english\" onChange={handleChange} value={values.english || ''} />\n                {\n                    errors.english ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <Button type=\"primary\" color=\"primary\" aria-label=\"submit\" type=\"submit\" htmltype=\"submit\" className=\"submit-button\">\n                Save\n            </Button>\n        </form>\n    )\n}\n\nexport default AddCard;","import React, {useState, useEffect} from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nfunction Form({card, submitFn, deleteCardFn}){\n    const { errors, values, handleChange, handleSubmit, handleClearValues } = useForm(submit, validate, card);\n\n    console.log(card)\n\n    function submit(){\n        submitFn(values).then(res=>{\n            handleSubmitReset();\n        }).catch(err =>{\n            handleSubmitReset();\n        });\n    }\n\n    function handleSubmitReset(){\n        handleClearValues();\n    }\n    return (\n        <form id=\"addCardForm\" onSubmit={handleSubmit}>\n            <Card style={{margin: \"50px 0px\"}} >\n                <CardContent>\n                    <div>\n                        <FormLabel>type:</FormLabel>\n                        <Select\n                            labelId=\"Type\"\n                            id=\"type-select\"\n                            value={values.type || ''}\n                            name=\"type\"\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'phrase'}>Phrase</MenuItem>\n                            <MenuItem value={'question'}>Question</MenuItem>\n                            <MenuItem value={'vocab'}>Vocab</MenuItem>\n                        </Select>\n                        {\n                            errors.type ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n                    <div>\n                        <FormLabel>hiragana:</FormLabel>\n                        <Input aria-label=\"hiragana\" className={`${errors.hiragana ? 'error' : ''}`} type=\"text\" placeholder=\"hiragana\" name=\"hiragana\" onChange={handleChange} value={values.hiragana || ''} />\n                        {\n                            errors.hiragana ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>no kanji:</FormLabel>\n                        <Input aria-label=\"no_kanji\" className=\"\" type=\"text\" placeholder=\"no_kanji\" name=\"no_kanji\" onChange={handleChange} value={values.no_kanji || ''} />\n                        {\n                            errors.no_kanji ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>romaji:</FormLabel>\n                        <Input aria-label=\"romaji\" className=\"\" type=\"text\" placeholder=\"romaji\" name=\"romaji\" onChange={handleChange} value={values.romaji || ''} />\n                        {\n                            errors.romaji ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>english:</FormLabel>\n                        <Input aria-label=\"english\" className={`${errors.english ? 'error' : ''}`} type=\"text\" placeholder=\"english\" name=\"english\" onChange={handleChange} value={values.english || ''} />\n                        {\n                            errors.english ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n              \n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', justifyContent:'space-evenly', width: '100%'}}>\n                        <div>\n                            <Button\n                                color=\"secondary\"\n                                startIcon={<DeleteIcon />}\n                                onClick={()=>deleteCardFn(card)}\n                            >\n                                Delete\n                            </Button>\n                        </div>\n                        <div>\n                            <Button style={{float: 'right'}} color=\"primary\" aria-label=\"submit\" type=\"submit\" htmltype=\"submit\" className=\"submit-button\">\n                                Save\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </form>\n    )\n}\n\nfunction EditCards() {\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const submitFn = (values) =>  dispatch(cardActions.updateCard(values));\n    const deleteCardFn = (_card) =>  dispatch(cardActions.deleteCard(_card));\n\n    useEffect(()=>{\n        dispatch(cardActions.getCards());\n    },[]);\n\n    return data ? (\n        <div>\n        {\n            _.map(data, (c, k) => {\n                return (<Form card={{...c}} key={k} submitFn={submitFn} deleteCardFn={deleteCardFn}></Form>)\n            })\n        }\n        </div>\n    ) : null\n}\n\nexport default EditCards;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Directory from './components/Directory';\nimport FlashCards from './components/FlashCards';\nimport AddCard from './components/AddCard';\nimport EditCards from './components/EditCards';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fade from '@material-ui/core/Fade';\nimport * as _ from 'lodash';\n\nfunction App() {\n  const [isMobile, setIsMobile] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    setIsMobile(window.outerWidth <= 767);\n\n    const handleResize = () => {\n      setIsMobile(window.outerWidth <= 767);\n    };\n\n    window.addEventListener(\"resize\", handleResize, { passive: true });\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize, true);\n    }\n  },[]);\n\n  return (\n    <div className=\"App\" style={{width: '85%', margin: '0 auto'}}>      \n      <BrowserRouter>\n          <header style={{textAlign: 'left'}}>\n          <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            Menu\n          </Button>\n          <Menu\n            id=\"fade-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={handleClose}\n            TransitionComponent={Fade}\n          >\n            <a href=\"/\"><MenuItem onClick={handleClose}>Lessons</MenuItem></a>\n            <a href=\"/add\"><MenuItem onClick={handleClose}>Add</MenuItem></a>\n            <a href=\"/edit\"><MenuItem onClick={handleClose}>Edit</MenuItem></a>\n          </Menu>\n          </header>\n          <main className=\"main-content\">\n              <Switch>\n                  <Route exact path=\"/\" render={(props) => <Directory/>} />\n                  <Route exact path=\"/flashcards/:lesson\" render={(props) => <FlashCards isMobile={isMobile}/>} />\n                  <Route exact path=\"/flashcards/:lesson/e\" render={(props) => <FlashCards isMobile={isMobile} isEnglishFirst={true} />} />\n                  <Route exact path=\"/add\" render={(props) => <AddCard isMobile={isMobile}/>} />\n                  <Route exact path=\"/edit\" render={(props) => <EditCards isMobile={isMobile}/>} />\n                  <Redirect to=\"/\"/>\n              </Switch>\n          </main>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n, \ndocument.getElementById('root'));\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState){\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk, reduxImmutableStateInvariant())\n    );\n}"],"sourceRoot":""}