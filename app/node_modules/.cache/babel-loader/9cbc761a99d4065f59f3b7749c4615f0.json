{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\nfunction Card({\n  card,\n  isMobile\n}) {\n  const [isShowAnswer, setIsShowAnswer] = useState(false);\n  console.log(setIsShowAnswer);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"study-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, card.hiragana), isShowAnswer ? React.createElement(\"div\", {\n    className: \"answer-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, card.english) : React.createElement(Button, {\n    color: \"secondary\",\n    onClick: setIsShowAnswer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Show Answer\"), card.audioUrl ? React.createElement(Player, {\n    url: card.audioUrl,\n    controls: isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : null, React.createElement(Button, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Show Anser\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nfunction FlashCards({\n  data\n}) {\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  console.log(data);\n  const currentCard = data[currentCardIndex];\n  return currentCard ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: currentCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Repeat\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Good\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, currentCardIndex + 1, \" / \", data.length)) : null;\n}\n\nexport default FlashCards;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js"],"names":["React","useState","useEffect","List","Button","Player","_","Card","card","isMobile","isShowAnswer","setIsShowAnswer","console","log","hiragana","english","audioUrl","FlashCards","data","currentCardIndex","setCurrentCardIndex","currentCard","display","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;;AAGA,SAASC,IAAT,CAAc;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAd,EAA+B;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,IAAI,CAACM,QAAlC,CADJ,EAIQJ,YAAY,GACR;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,IAAI,CAACO,OAAnC,CADQ,GAGR,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEJ,eAAe,CAAC,IAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPZ,EAaQH,IAAI,CAACQ,QAAL,GACI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAER,IAAI,CAACQ,QAAlB;AAA4B,IAAA,QAAQ,EAAEP,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAGI,IAhBZ,EAmBI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ;AAwBH;;AAED,SAASQ,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA2B;AACvB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,CAAD,CAAxD;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAEA,QAAMG,WAAW,GAAGH,IAAI,CAACC,gBAAD,CAAxB;AACA,SAAOE,WAAW,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CALJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,gBAAgB,GAAC,CAAvB,SAA6BD,IAAI,CAACK,MAAlC,CAdJ,CADc,GAiBd,IAjBJ;AAkBH;;AAED,eAAeN,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\n\nfunction Card({card, isMobile}){\n    const [isShowAnswer, setIsShowAnswer] = useState(false);\n\n    console.log(setIsShowAnswer)\n\n    return (\n        <div>\n            <div className=\"study-text\">{card.hiragana}</div>\n\n            {\n                isShowAnswer ? \n                    <div className=\"answer-text\">{card.english}</div>\n                    :\n                    <Button color=\"secondary\" onClick={setIsShowAnswer(true)}>Show Answer</Button>\n            }\n\n          \n\n            {\n                card.audioUrl ?\n                    <Player url={card.audioUrl} controls={isMobile}></Player>\n                :\n                    null\n            }\n\n            <Button color=\"secondary\">Show Anser</Button>\n            <div></div>\n        </div>\n    )\n}\n\nfunction FlashCards({data}){\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\n\n    console.log(data)\n\n    const currentCard = data[currentCardIndex];\n    return currentCard ? (\n        <div>\n            <List>\n                <Card card={currentCard}></Card>\n            </List>\n\n            <div style={{display: 'flex'}}>\n                <Button variant=\"contained\" color=\"secondary\">\n                    Repeat\n                </Button>\n                <Button variant=\"contained\" color=\"primary\">\n                    Good\n                </Button>\n            </div>\n\n            <div>{currentCardIndex+1} / {data.length}</div>\n        </div>\n    ) : null\n}\n\nexport default FlashCards;\n"]},"metadata":{},"sourceType":"module"}