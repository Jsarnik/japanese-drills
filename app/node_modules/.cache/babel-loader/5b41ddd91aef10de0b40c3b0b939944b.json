{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Directory.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\n\nfunction Directory() {\n  const data = useSelector(state => state.cards);\n  const dispatch = useDispatch();\n\n  const _all = data.toArray().length || 0;\n\n  const _phrase = _.filter(data, o => {\n    return o.type === 'phrase';\n  }).length || 0;\n\n  const _question = _.filter(data, o => {\n    return o.type === 'question';\n  }).length || 0;\n\n  const _vocab = _.filter(data, o => {\n    return o.type === 'vocab';\n  }).length || 0;\n\n  console.log(data);\n  useEffect(() => {\n    dispatch(cardActions.getCards());\n  }, []);\n\n  function link(route) {\n    window.location.href = `/flashcards/${route}`;\n  }\n\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: () => link('phrase'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'phrases',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), _phrase), React.createElement(ListItem, {\n    button: true,\n    onClick: () => link('question'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'questions',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), _question), React.createElement(ListItem, {\n    button: true,\n    onClick: () => link('vocab'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'vocab',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), _vocab), React.createElement(ListItem, {\n    button: true,\n    onClick: () => link('all'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'all',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), _all));\n}\n\nexport default Directory;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Directory.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","FeedbackIcon","ListItemText","useDispatch","useSelector","cardActions","_","Directory","data","state","cards","dispatch","_all","toArray","length","_phrase","filter","o","type","_question","_vocab","console","log","getCards","link","route","window","location","href"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\n\nfunction Directory() {\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const _all =  data.toArray().length || 0;\n    const _phrase =  _.filter(data, o=>{return o.type === 'phrase'}).length || 0;\n    const _question =  _.filter(data, o=>{return o.type === 'question'}).length || 0;\n    const _vocab =  _.filter(data, o=>{return o.type === 'vocab'}).length || 0;\n\n    console.log(data)\n   \n    \n    useEffect(()=>{\n        dispatch(cardActions.getCards());\n    },[]);\n    \n    function link(route){\n        window.location.href = `/flashcards/${route}`;\n    }\n\n    return (\n        <List>\n            <ListItem button onClick={()=>link('phrase')}>\n                <ListItemIcon>\n                    <FeedbackIcon/>\n                </ListItemIcon>\n                <ListItemText primary={'phrases'}/>\n                {_phrase}\n            </ListItem>\n            <ListItem button onClick={()=>link('question')}>\n                <ListItemIcon>\n                    <FeedbackIcon/>\n                </ListItemIcon>\n                <ListItemText primary={'questions'}/>\n                {_question}\n            </ListItem>\n            <ListItem button onClick={()=>link('vocab')}>\n                <ListItemIcon>\n                    <FeedbackIcon/>\n                </ListItemIcon>\n                <ListItemText primary={'vocab'}/>\n                {_vocab}\n            </ListItem>\n            <ListItem button onClick={()=>link('all')}>\n                <ListItemIcon>\n                    <FeedbackIcon/>\n                </ListItemIcon>\n                <ListItemText primary={'all'}/>\n                {_all}\n            </ListItem>\n        </List>\n    )\n}\n\nexport default Directory;"]},"metadata":{},"sourceType":"module"}