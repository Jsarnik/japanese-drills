{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/EditCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nfunction Form({\n  card,\n  submitFn,\n  deleteCardFn\n}) {\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    handleClearValues\n  } = useForm(submit, validate, card);\n  const [isFormSubmit, setFormSubmit] = useState(false);\n\n  function submit() {\n    submitFn(values).then(res => {\n      handleSubmitReset();\n    }).catch(err => {\n      handleSubmitReset();\n    });\n  }\n\n  function handleSubmitReset() {\n    setFormSubmit(true);\n    handleClearValues();\n  }\n\n  return React.createElement(\"form\", {\n    id: \"addCardForm\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      margin: \"50px 0px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"type:\"), React.createElement(Select, {\n    labelId: \"Type\",\n    id: \"type-select\",\n    value: values.type || '',\n    name: \"type\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 'phrase',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Phrase\"), React.createElement(MenuItem, {\n    value: 'question',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Question\"), React.createElement(MenuItem, {\n    value: 'vocab',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Vocab\")), errors.type ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"hiragana:\"), React.createElement(Input, {\n    \"aria-label\": \"hiragana\",\n    className: `${errors.hiragana ? 'error' : ''}`,\n    type: \"text\",\n    placeholder: \"hiragana\",\n    name: \"hiragana\",\n    onChange: handleChange,\n    value: values.hiragana || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), errors.hiragana ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"romaji:\"), React.createElement(Input, {\n    \"aria-label\": \"romaji\",\n    className: \"\",\n    type: \"text\",\n    placeholder: \"romaji\",\n    name: \"romaji\",\n    onChange: handleChange,\n    value: values.romaji || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), errors.romaji ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"english:\"), React.createElement(Input, {\n    \"aria-label\": \"english\",\n    className: `${errors.english ? 'error' : ''}`,\n    type: \"text\",\n    placeholder: \"english\",\n    name: \"english\",\n    onChange: handleChange,\n    value: values.english || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), errors.english ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Required.\") : null)), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    startIcon: React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }),\n    onClick: () => deleteCardFn(card),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Delete\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      float: 'right'\n    },\n    color: \"primary\",\n    \"aria-label\": \"submit\",\n    type: \"submit\",\n    htmltype: \"submit\",\n    className: \"submit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Save\"))))));\n}\n\nfunction EditCards() {\n  const data = useSelector(state => state.cards);\n  const dispatch = useDispatch();\n\n  const submitFn = values => dispatch(cardActions.updateCard(values));\n\n  const deleteCardFn = _card => dispatch(cardActions.deleteCard(_card));\n\n  useEffect(() => {\n    dispatch(cardActions.getCards());\n  }, []);\n  return data ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, _.map(data, (c, k) => {\n    return React.createElement(Form, {\n      card: { ...c\n      },\n      key: k,\n      submitFn: submitFn,\n      deleteCardFn: deleteCardFn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    });\n  })) : null;\n}\n\nexport default EditCards;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/EditCards.js"],"names":["React","useState","useEffect","useForm","validate","useDispatch","useSelector","cardActions","_","Select","MenuItem","Input","Button","DeleteIcon","Card","CardActions","CardContent","FormLabel","Form","card","submitFn","deleteCardFn","errors","values","handleChange","handleSubmit","handleClearValues","submit","isFormSubmit","setFormSubmit","then","res","handleSubmitReset","catch","err","margin","type","hiragana","romaji","english","display","justifyContent","width","float","EditCards","data","state","cards","dispatch","updateCard","_card","deleteCard","getCards","map","c","k"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nfunction Form({card, submitFn, deleteCardFn}){\n    const { errors, values, handleChange, handleSubmit, handleClearValues } = useForm(submit, validate, card);\n    const [isFormSubmit, setFormSubmit] = useState(false);\n\n    function submit(){\n        submitFn(values).then(res=>{\n            handleSubmitReset();\n        }).catch(err =>{\n            handleSubmitReset();\n        });\n    }\n\n    function handleSubmitReset(){\n        setFormSubmit(true);\n        handleClearValues();\n    }\n    return (\n        <form id=\"addCardForm\" onSubmit={handleSubmit}>\n            <Card style={{margin: \"50px 0px\"}}>\n                <CardContent>\n                    <div>\n                        <FormLabel>type:</FormLabel>\n                        <Select\n                            labelId=\"Type\"\n                            id=\"type-select\"\n                            value={values.type || ''}\n                            name=\"type\"\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'phrase'}>Phrase</MenuItem>\n                            <MenuItem value={'question'}>Question</MenuItem>\n                            <MenuItem value={'vocab'}>Vocab</MenuItem>\n                        </Select>\n                        {\n                            errors.type ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n                    <div>\n                        <FormLabel>hiragana:</FormLabel>\n                        <Input aria-label=\"hiragana\" className={`${errors.hiragana ? 'error' : ''}`} type=\"text\" placeholder=\"hiragana\" name=\"hiragana\" onChange={handleChange} value={values.hiragana || ''} />\n                        {\n                            errors.hiragana ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>romaji:</FormLabel>\n                        <Input aria-label=\"romaji\" className=\"\" type=\"text\" placeholder=\"romaji\" name=\"romaji\" onChange={handleChange} value={values.romaji || ''} />\n                        {\n                            errors.romaji ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n\n                    <div>\n                        <FormLabel>english:</FormLabel>\n                        <Input aria-label=\"english\" className={`${errors.english ? 'error' : ''}`} type=\"text\" placeholder=\"english\" name=\"english\" onChange={handleChange} value={values.english || ''} />\n                        {\n                            errors.english ? \n                                <span>Required.</span>\n                            :\n                                null\n                        }\n                    </div>\n              \n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', justifyContent:'space-evenly', width: '100%'}}>\n                        <div>\n                            <Button\n                                color=\"secondary\"\n                                startIcon={<DeleteIcon />}\n                                onClick={()=>deleteCardFn(card)}\n                            >\n                                Delete\n                            </Button>\n                        </div>\n                        <div>\n                            <Button style={{float: 'right'}} color=\"primary\" aria-label=\"submit\" type=\"submit\" htmltype=\"submit\" className=\"submit-button\">\n                                Save\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </form>\n    )\n}\n\nfunction EditCards() {\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const submitFn = (values) =>  dispatch(cardActions.updateCard(values));\n    const deleteCardFn = (_card) =>  dispatch(cardActions.deleteCard(_card));\n\n    useEffect(()=>{\n        dispatch(cardActions.getCards());\n    },[]);\n\n    return data ? (\n        <div>\n        {\n            _.map(data, (c, k) => {\n                return (<Form card={{...c}} key={k} submitFn={submitFn} deleteCardFn={deleteCardFn}></Form>)\n            })\n        }\n        </div>\n    ) : null\n}\n\nexport default EditCards;"]},"metadata":{},"sourceType":"module"}