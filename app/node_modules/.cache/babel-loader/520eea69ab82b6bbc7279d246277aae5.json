{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as cardActions from '../actions/cardActions';\nimport { withRouter } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nconst ColorButtonGreen = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green['A700']),\n    backgroundColor: green[50],\n    '&:hover': {\n      backgroundColor: green[50]\n    }\n  }\n}))(Button);\n\nfunction ACard({\n  card,\n  isMobile\n}) {\n  const [isShowAnswer, setIsShowAnswer] = useState(false);\n  const [isShowRomaji, setIsShowRomaji] = useState(false);\n  const [isShowNoKanji, setIsShowNoKanji] = useState(false);\n  useEffect(() => {\n    setIsShowAnswer(false);\n    setIsShowRomaji(false);\n    setIsShowNoKanji(false);\n  }, [card]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, card.audioUrl ? React.createElement(Player, {\n    url: card.audioUrl,\n    controls: isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"study-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, card.hiragana), isShowNoKanji ? React.createElement(\"div\", {\n    className: \"hint-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, card.no_kanji) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => setIsShowNoKanji(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Show No Kanji\")), isShowRomaji ? React.createElement(\"div\", {\n    className: \"romaji-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, card.romaji) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => setIsShowRomaji(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Show Romaji\")), isShowAnswer ? React.createElement(\"div\", {\n    className: \"answer-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, card.english) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(ColorButtonGreen, {\n    color: \"primary\",\n    onClick: () => setIsShowAnswer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Show Answer\")));\n}\n\nfunction FlashCards(props) {\n  const data = useSelector(state => state.cards);\n  const dispatch = useDispatch();\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n\n  const remaining = _.filter(data, o => {\n    return !o.isLesson;\n  });\n\n  const finished = _.filter(data, o => {\n    return o.isLesson;\n  });\n\n  useEffect(() => {\n    let type = props.match.params.lesson === 'all' ? null : props.match.params.lesson;\n    dispatch(cardActions.getCards(type));\n  }, []);\n\n  function resetLesson() {\n    dispatch(cardActions.resetLesson());\n    setCurrentCardIndex(0);\n  }\n\n  function setNext(isRepeat) {\n    if (currentCardIndex + 1 < remaining.length) {\n      if (!isRepeat) {\n        currentCard.isLesson = true;\n        dispatch(cardActions.setCard(currentCard));\n      } else {\n        setCurrentCardIndex(currentCardIndex + 1);\n      }\n    } else {\n      setCurrentCardIndex(0);\n    }\n  }\n\n  let currentCard = { ...remaining[currentCardIndex]\n  };\n  return !_.isEmpty(currentCard) ? React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '100%'\n    },\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, finished.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    startIcon: React.createElement(ReplayIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    onClick: resetLesson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Reset Lesson\")) : null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, props.match.params.lesson.toUpperCase()), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      marginBottom: '50px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, currentCardIndex + 1), \" / \", React.createElement(\"span\", {\n    className: \"remaining\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, remaining.length, \" \"), \" / \", React.createElement(\"span\", {\n    className: \"finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, finished.length))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(ACard, {\n    card: currentCard,\n    isMobile: props.isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginRight: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => setNext(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Good\")), React.createElement(\"div\", {\n    style: {\n      marginLeft: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => setNext(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Revisit\")))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '100%'\n    },\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"No Cards\");\n}\n\nexport default withRouter(FlashCards);","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js"],"names":["React","useState","useEffect","cardActions","withRouter","Card","CardActions","CardContent","withStyles","Button","Player","_","useDispatch","useSelector","ReplayIcon","green","blue","ColorButtonGreen","theme","root","color","palette","getContrastText","backgroundColor","ACard","card","isMobile","isShowAnswer","setIsShowAnswer","isShowRomaji","setIsShowRomaji","isShowNoKanji","setIsShowNoKanji","audioUrl","hiragana","no_kanji","romaji","english","FlashCards","props","data","state","cards","dispatch","currentCardIndex","setCurrentCardIndex","remaining","filter","o","isLesson","finished","type","match","params","lesson","getCards","resetLesson","setNext","isRepeat","length","currentCard","setCard","isEmpty","textAlign","width","toUpperCase","display","justifyContent","marginBottom","marginRight","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AAEA,MAAMC,gBAAgB,GAAGT,UAAU,CAACU,KAAK,KAAK;AAC1CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAcC,eAAd,CAA8BP,KAAK,CAAC,MAAD,CAAnC,CADH;AAEJQ,IAAAA,eAAe,EAAER,KAAK,CAAC,EAAD,CAFlB;AAGJ,eAAW;AACTQ,MAAAA,eAAe,EAAER,KAAK,CAAC,EAAD;AADb;AAHP;AADoC,CAAL,CAAN,CAAV,CAQnBN,MARmB,CAAzB;;AAUA,SAASe,KAAT,CAAe;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAf,EAAgC;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC8B,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV0B,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAJQ,EAIN,CAACP,IAAD,CAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,IAAI,CAACQ,QAAL,GACI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAER,IAAI,CAACQ,QAAlB;AAA4B,IAAA,QAAQ,EAAEP,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAGI,IALZ,EAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,IAAI,CAACS,QAAlC,CAPJ,EAUQH,aAAa,GACT;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BN,IAAI,CAACU,QAAjC,CADS,GAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAE,MAAIH,gBAAgB,CAAC,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAbZ,EAoBQH,YAAY,GACR;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BJ,IAAI,CAACW,MAAnC,CADQ,GAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAE,MAAIN,eAAe,CAAC,IAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFR,CAvBZ,EAgCQH,YAAY,GACR;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,IAAI,CAACY,OAAnC,CADQ,GAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAkC,IAAA,OAAO,EAAE,MAAIT,eAAe,CAAC,IAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAnCZ,CADJ;AA0CH;;AAED,SAASU,UAAT,CAAoBC,KAApB,EAA0B;AACtB,QAAMC,IAAI,GAAG3B,WAAW,CAAC4B,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAxB;AACA,QAAMC,QAAQ,GAAG/B,WAAW,EAA5B;AACA,QAAM,CAACgC,gBAAD,EAAmBC,mBAAnB,IAA0C5C,QAAQ,CAAC,CAAD,CAAxD;;AACA,QAAM6C,SAAS,GAAGnC,CAAC,CAACoC,MAAF,CAASP,IAAT,EAAeQ,CAAC,IAAI;AAClC,WAAO,CAACA,CAAC,CAACC,QAAV;AACH,GAFiB,CAAlB;;AAGA,QAAMC,QAAQ,GAAGvC,CAAC,CAACoC,MAAF,CAASP,IAAT,EAAeQ,CAAC,IAAI;AACjC,WAAOA,CAAC,CAACC,QAAT;AACH,GAFgB,CAAjB;;AAIA/C,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIiD,IAAI,GAAGZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,KAA8B,KAA9B,GAAsC,IAAtC,GAA6Cf,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,MAA3E;AACAX,IAAAA,QAAQ,CAACxC,WAAW,CAACoD,QAAZ,CAAqBJ,IAArB,CAAD,CAAR;AACH,GAHQ,EAGP,EAHO,CAAT;;AAKA,WAASK,WAAT,GAAsB;AAClBb,IAAAA,QAAQ,CAACxC,WAAW,CAACqD,WAAZ,EAAD,CAAR;AACAX,IAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACH;;AAED,WAASY,OAAT,CAAiBC,QAAjB,EAA0B;AACtB,QAAGd,gBAAgB,GAAC,CAAjB,GAAqBE,SAAS,CAACa,MAAlC,EAAyC;AACrC,UAAG,CAACD,QAAJ,EAAa;AACTE,QAAAA,WAAW,CAACX,QAAZ,GAAuB,IAAvB;AACAN,QAAAA,QAAQ,CAACxC,WAAW,CAAC0D,OAAZ,CAAoBD,WAApB,CAAD,CAAR;AACH,OAHD,MAGK;AACDf,QAAAA,mBAAmB,CAACD,gBAAgB,GAAC,CAAlB,CAAnB;AACH;AACJ,KAPD,MAOK;AACDC,MAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACH;AACJ;;AAED,MAAIe,WAAW,GAAG,EAAC,GAAGd,SAAS,CAACF,gBAAD;AAAb,GAAlB;AAEA,SAAO,CAACjC,CAAC,CAACmD,OAAF,CAAUF,WAAV,CAAD,GACH;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAkD,IAAA,SAAS,EAAC,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQd,QAAQ,CAACS,MAAT,GAAkB,CAAlB,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,SAAS,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAII,IAAA,OAAO,EAAEH,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,GAYI,IAdZ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMjB,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,CAA0BW,WAA1B,EAAN,CAjBJ,EAkBI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE,cAAlC;AAAkDC,MAAAA,YAAY,EAAE;AAAhE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOxB,gBAAgB,GAAC,CAAxB,CAAL,SAAyC;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BE,SAAS,CAACa,MAAvC,MAAzC,SAAkG;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BT,QAAQ,CAACS,MAArC,CAAlG,CADJ,CAlBJ,EAsBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,WAAb;AAA0B,IAAA,QAAQ,EAAErB,KAAK,CAACb,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACwC,MAAAA,OAAO,EAAE,MAAV;AAAkBF,MAAAA,KAAK,EAAE,MAAzB;AAAiCG,MAAAA,cAAc,EAAE;AAAjD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,WAAW,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE,MAAIZ,OAAO,CAAC,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,EAMI;AAAK,IAAA,KAAK,EAAE;AAACa,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAE,MAAIb,OAAO,CAAC,IAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CANJ,CADJ,CAJJ,CAtBJ,CADG,GA2CH;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAkD,IAAA,SAAS,EAAC,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CJ;AA4CH;;AAED,eAAe5D,UAAU,CAACkC,UAAD,CAAzB","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport * as cardActions from '../actions/cardActions';\nimport {withRouter} from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\n\nconst ColorButtonGreen = withStyles(theme => ({\n    root: {\n      color: theme.palette.getContrastText(green['A700']),\n      backgroundColor: green[50],\n      '&:hover': {\n        backgroundColor: green[50],\n      },\n    },\n  }))(Button);\n\nfunction ACard({card, isMobile}){\n    const [isShowAnswer, setIsShowAnswer] = useState(false);\n    const [isShowRomaji, setIsShowRomaji] = useState(false);\n    const [isShowNoKanji, setIsShowNoKanji] = useState(false);\n\n    useEffect(()=>{\n        setIsShowAnswer(false);\n        setIsShowRomaji(false);\n        setIsShowNoKanji(false);\n    }, [card])\n\n    return (\n        <div>\n            {\n                card.audioUrl ?\n                    <Player url={card.audioUrl} controls={isMobile}></Player>\n                :\n                    null\n            }\n            <div className=\"study-text\">{card.hiragana}</div>\n\n            {\n                isShowNoKanji ? \n                    <div className=\"hint-text\">{card.no_kanji}</div>\n                    :\n                    <div>\n                        <Button color=\"secondary\" onClick={()=>setIsShowNoKanji(true)}>Show No Kanji</Button>\n                    </div>\n                    \n            }\n\n            {\n                isShowRomaji ? \n                    <div className=\"romaji-text\">{card.romaji}</div>\n                    :\n                    <div>\n                        \n                            <Button color=\"secondary\" onClick={()=>setIsShowRomaji(true)}>Show Romaji</Button>\n                        \n                    </div>\n                    \n            }\n\n            {\n                isShowAnswer ? \n                    <div className=\"answer-text\">{card.english}</div>\n                    :\n                    <div>\n                        <ColorButtonGreen color=\"primary\" onClick={()=>setIsShowAnswer(true)}>Show Answer</ColorButtonGreen>\n                    </div>\n            }\n        </div>\n    )\n}\n\nfunction FlashCards(props){\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\n    const remaining = _.filter(data, o => {\n        return !o.isLesson;\n    });\n    const finished = _.filter(data, o => {\n        return o.isLesson;\n    });\n\n    useEffect(()=>{\n        let type = props.match.params.lesson === 'all' ? null : props.match.params.lesson;\n        dispatch(cardActions.getCards(type));\n    },[]);\n\n    function resetLesson(){\n        dispatch(cardActions.resetLesson());\n        setCurrentCardIndex(0);\n    }\n\n    function setNext(isRepeat){\n        if(currentCardIndex+1 < remaining.length){\n            if(!isRepeat){\n                currentCard.isLesson = true;\n                dispatch(cardActions.setCard(currentCard));\n            }else{\n                setCurrentCardIndex(currentCardIndex+1);\n            }\n        }else{\n            setCurrentCardIndex(0);\n        }\n    }\n    \n    let currentCard = {...remaining[currentCardIndex]};\n\n    return !_.isEmpty(currentCard) ? (\n        <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">\n            {\n                finished.length > 0 ?\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<ReplayIcon />}\n                            onClick={resetLesson}\n                        >\n                            Reset Lesson\n                        </Button>\n                    </div>\n                :\n                    null\n            }\n\n            <div>{props.match.params.lesson.toUpperCase()}</div>\n            <div style={{display: 'flex', justifyContent: 'space-evenly', marginBottom: '50px'}}>\n                <div><span>{currentCardIndex+1}</span> / <span className=\"remaining\">{remaining.length} </span> / <span className=\"finished\">{finished.length}</span></div>\n            </div>\n\n            <Card>\n                <CardContent>\n                    <ACard card={currentCard} isMobile={props.isMobile}></ACard>\n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n                        <div style={{marginRight: '5px'}}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setNext(false)}>\n                                Good\n                            </Button>\n                        </div>\n                        <div style={{marginLeft: '5px'}}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>setNext(true)}>\n                                Revisit\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </div>\n    ) : <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">No Cards</div>\n}\n\nexport default withRouter(FlashCards);\n"]},"metadata":{},"sourceType":"module"}