{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Player.js\";\nimport React, { useState, useEffect } from \"react\";\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle];\n};\n\nconst Player = ({\n  url\n}) => {\n  const [playing, toggle] = useAudio(url);\n  return React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, playing ? React.createElement(PauseIcon, {\n    style: {\n      color: red[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }) : React.createElement(RecordVoiceOverIcon, {\n    style: {\n      color: green[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Player.js"],"names":["React","useState","useEffect","GraphicEqIcon","PlayArrowIcon","PauseIcon","RecordVoiceOverIcon","green","red","useAudio","url","audio","Audio","playing","setPlaying","toggle","play","pause","addEventListener","removeEventListener","Player","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,0BAA3B;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,QAAM,CAACC,KAAD,IAAUV,QAAQ,CAAC,IAAIW,KAAJ,CAAUF,GAAV,CAAD,CAAxB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,GAAGF,KAAK,CAACK,IAAN,EAAH,GAAkBL,KAAK,CAACM,KAAN,EAAzB;AACD,GAFM,EAGP,CAACJ,OAAD,CAHO,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACO,gBAAN,CAAuB,OAAvB,EAAgC,MAAMJ,UAAU,CAAC,KAAD,CAAhD;AACA,WAAO,MAAM;AACXH,MAAAA,KAAK,CAACQ,mBAAN,CAA0B,OAA1B,EAAmC,MAAML,UAAU,CAAC,KAAD,CAAnD;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACD,OAAD,EAAUE,MAAV,CAAP;AACD,CApBD;;AAsBA,MAAMK,MAAM,GAAG,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAa;AAC1B,QAAM,CAACG,OAAD,EAAUE,MAAV,IAAoBN,QAAQ,CAACC,GAAD,CAAlC;AAEA,SACE;AAAK,IAAA,OAAO,EAAEK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,OAAO,GACH,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAEb,GAAG,CAAC,GAAD;AAAZ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAGH,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAEd,KAAK,CAAC,GAAD;AAAd,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALZ,CADF;AAUD,CAbD;;AAeA,eAAea,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport GraphicEqIcon from '@material-ui/icons/GraphicEq';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      playing ? audio.play() : audio.pause();\n    },\n    [playing]\n  );\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle] = useAudio(url);\n\n  return (\n    <div onClick={toggle}>\n        {\n            playing ? \n                <PauseIcon style={{ color: red[500]}}></PauseIcon>\n            :\n                <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n        }\n    </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}