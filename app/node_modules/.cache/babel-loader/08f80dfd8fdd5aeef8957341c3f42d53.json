{"ast":null,"code":"import _defineProperty from\"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var useForm=function useForm(submitForm,validate,initValue){var _useState=useState(initValue),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSubmitting=_useState6[0],setIsSubmitting=_useState6[1];useEffect(function(){if(Object.keys(errors).length===0&&isSubmitting){submitForm();}},[errors,isSubmitting]);var handleSubmit=function handleSubmit(event){if(event)event.preventDefault();setIsSubmitting(true);setErrors(validate(values));};var handleChange=function handleChange(event){event.persist();setIsSubmitting(false);setValues(function(values){return _objectSpread({},values,_defineProperty({},event.target.name,event.target.value));});if(errors[event.target.name]){setErrors(validate(_objectSpread({},values,_defineProperty({},event.target.name,event.target.value))));}};var handleClearValues=function handleClearValues(){setValues({});setIsSubmitting(false);};return{handleClearValues:handleClearValues,handleChange:handleChange,handleSubmit:handleSubmit,values:values,errors:errors};};export default useForm;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/useForm.js"],"names":["useState","useEffect","useForm","submitForm","validate","initValue","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","event","preventDefault","handleChange","persist","target","name","value","handleClearValues"],"mappings":"4ZAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,UAAD,CAAaC,QAAb,CAAuBC,SAAvB,CAAqC,eAErBL,QAAQ,CAACK,SAAD,CAFa,wCAE1CC,MAF0C,eAElCC,SAFkC,8BAGrBP,QAAQ,CAAC,EAAD,CAHa,yCAG1CQ,MAH0C,eAGlCC,SAHkC,8BAITT,QAAQ,CAAC,KAAD,CAJC,yCAI1CU,YAJ0C,eAI5BC,eAJ4B,eAMjDV,SAAS,CAAC,UAAM,CACZ,GAAIW,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,GAA+B,CAA/B,EAAoCJ,YAAxC,CAAsD,CAClDP,UAAU,GACb,CACF,CAJM,CAIJ,CAACK,MAAD,CAASE,YAAT,CAJI,CAAT,CAMA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,GAAIA,KAAJ,CAAWA,KAAK,CAACC,cAAN,GACXN,eAAe,CAAC,IAAD,CAAf,CACAF,SAAS,CAACL,QAAQ,CAACE,MAAD,CAAT,CAAT,CACH,CAJD,CAMA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAW,CAC5BA,KAAK,CAACG,OAAN,GACAR,eAAe,CAAC,KAAD,CAAf,CACAJ,SAAS,CAAC,SAAAD,MAAM,0BAAUA,MAAV,oBAAmBU,KAAK,CAACI,MAAN,CAAaC,IAAhC,CAAuCL,KAAK,CAACI,MAAN,CAAaE,KAApD,IAAP,CAAT,CACA,GAAGd,MAAM,CAACQ,KAAK,CAACI,MAAN,CAAaC,IAAd,CAAT,CAA6B,CACzBZ,SAAS,CAACL,QAAQ,kBAAME,MAAN,oBAAeU,KAAK,CAACI,MAAN,CAAaC,IAA5B,CAAmCL,KAAK,CAACI,MAAN,CAAaE,KAAhD,GAAT,CAAT,CACH,CACJ,CAPD,CASA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BhB,SAAS,CAAC,EAAD,CAAT,CACAI,eAAe,CAAC,KAAD,CAAf,CACH,CAHD,CAKA,MAAO,CACHY,iBAAiB,CAAjBA,iBADG,CAEHL,YAAY,CAAZA,YAFG,CAGHH,YAAY,CAAZA,YAHG,CAIHT,MAAM,CAANA,MAJG,CAKHE,MAAM,CAANA,MALG,CAAP,CAOH,CAvCD,CAyCA,cAAeN,CAAAA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\n\nconst useForm = (submitForm, validate, initValue) => {\n\n    const [values, setValues] = useState(initValue);\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            submitForm();\n        }\n      }, [errors, isSubmitting]);\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setIsSubmitting(true);\n        setErrors(validate(values));\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setIsSubmitting(false);\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n        if(errors[event.target.name]){\n            setErrors(validate({ ...values, [event.target.name]: event.target.value }));\n        }\n    };\n\n    const handleClearValues = () => {\n        setValues({});\n        setIsSubmitting(false)\n    }\n\n    return {\n        handleClearValues,\n        handleChange,\n        handleSubmit,\n        values,\n        errors\n    }\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}