{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/EditCards.js\";\nimport React, { useState } from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nfunction Form() {\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    handleClearValues\n  } = useForm(submit, validate);\n  const dispatch = useDispatch();\n  const [isFormSubmit, setFormSubmit] = useState(false);\n\n  function submit() {\n    dispatch(cardActions.addCard(values)).then(res => {\n      handleSubmitReset();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleSubmitReset() {\n    setFormSubmit(true);\n    handleClearValues();\n  }\n\n  return React.createElement(\"form\", {\n    id: \"addCardForm\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Input, {\n    \"aria-label\": \"hiragana\",\n    className: `${errors.hiragana ? 'error' : ''}`,\n    type: \"text\",\n    placeholder: \"hiragana\",\n    name: \"hiragana\",\n    onChange: handleChange,\n    value: values.hiragana || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), errors.hiragana ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Input, {\n    \"aria-label\": \"romaji\",\n    className: \"\",\n    type: \"text\",\n    placeholder: \"romaji\",\n    name: \"romaji\",\n    onChange: handleChange,\n    value: values.romaji || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), errors.romaji ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Input, {\n    \"aria-label\": \"english\",\n    className: `${errors.english ? 'error' : ''}`,\n    type: \"text\",\n    placeholder: \"english\",\n    name: \"english\",\n    onChange: handleChange,\n    value: values.english || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), errors.english ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Select, {\n    labelId: \"Type\",\n    id: \"type-select\",\n    value: values.type || '',\n    name: \"type\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 'phrase',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Phrase\"), React.createElement(MenuItem, {\n    value: 'question',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Question\"), React.createElement(MenuItem, {\n    value: 'vocab',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Vocab\")), errors.type ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Required.\") : null), React.createElement(Button, {\n    type: \"primary\",\n    color: \"primary\",\n    \"aria-label\": \"submit\",\n    type: \"submit\",\n    htmltype: \"submit\",\n    className: \"submit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"SUBMIT\"));\n}\n\nfunction EditCards() {\n  const data = useSelector(state => state.cards);\n  return data ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, _.map(data, (c, k) => {\n    return React.createElement(Form, {\n      card: c,\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  })) : null;\n}\n\nexport default EditCards;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/EditCards.js"],"names":["React","useState","useForm","validate","useDispatch","useSelector","cardActions","_","Select","MenuItem","Input","Button","Form","errors","values","handleChange","handleSubmit","handleClearValues","submit","dispatch","isFormSubmit","setFormSubmit","addCard","then","res","handleSubmitReset","catch","err","console","log","hiragana","romaji","english","type","EditCards","data","state","cards","map","c","k"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport useForm from \"./useForm\";\nimport validate from './useValidation';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from '../actions/cardActions';\nimport * as _ from 'lodash';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\n\nfunction Form(){\n    const { errors, values, handleChange, handleSubmit, handleClearValues } = useForm(submit, validate);\n    const dispatch = useDispatch();\n\n    const [isFormSubmit, setFormSubmit] = useState(false);\n\n    function submit(){\n        dispatch(cardActions.addCard(values)).then(res=>{\n            handleSubmitReset();\n        }).catch(err => {\n            console.log(err);\n        });\n\n    }\n\n    function handleSubmitReset(){\n        setFormSubmit(true);\n        handleClearValues();\n    }\n    return (\n        <form id=\"addCardForm\" onSubmit={handleSubmit} >\n            <div>\n                <Input aria-label=\"hiragana\" className={`${errors.hiragana ? 'error' : ''}`} type=\"text\" placeholder=\"hiragana\" name=\"hiragana\" onChange={handleChange} value={values.hiragana || ''} />\n                {\n                    errors.hiragana ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"romaji\" className=\"\" type=\"text\" placeholder=\"romaji\" name=\"romaji\" onChange={handleChange} value={values.romaji || ''} />\n                {\n                    errors.romaji ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Input aria-label=\"english\" className={`${errors.english ? 'error' : ''}`} type=\"text\" placeholder=\"english\" name=\"english\" onChange={handleChange} value={values.english || ''} />\n                {\n                    errors.english ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <div>\n                <Select\n                    labelId=\"Type\"\n                    id=\"type-select\"\n                    value={values.type || ''}\n                    name=\"type\"\n                    onChange={handleChange}\n                >\n                    <MenuItem value={'phrase'}>Phrase</MenuItem>\n                    <MenuItem value={'question'}>Question</MenuItem>\n                    <MenuItem value={'vocab'}>Vocab</MenuItem>\n                </Select>\n                {\n                    errors.type ? \n                        <span>Required.</span>\n                    :\n                        null\n                }\n            </div>\n\n            <Button type=\"primary\" color=\"primary\" aria-label=\"submit\" type=\"submit\" htmltype=\"submit\" className=\"submit-button\">\n                SUBMIT\n            </Button>\n        </form>\n    )\n}\n\nfunction EditCards() {\n    const data = useSelector(state => state.cards);\n\n    return data ? (\n        <div>\n        {\n            _.map(data, (c,k) => {\n                return (<Form card={c} key={k}></Form>)\n            })\n        }\n        </div>\n    ) : null\n}\n\nexport default EditCards;"]},"metadata":{},"sourceType":"module"}