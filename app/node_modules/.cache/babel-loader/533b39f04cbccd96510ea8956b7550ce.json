{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Phrases.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\nconst defaultKeyShow = 'hiragana';\nconst BASE_URI = 'http://japanese-drills.s3.amazonaws.com/audio/';\n\nfunction Phrases({\n  data,\n  isMobile\n}) {\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Items, {\n    data: data,\n    isMobile: isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nfunction Items({\n  data,\n  isMobile\n}) {\n  return data.map((item, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"phrase-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"phrase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Phrase, {\n      phrase: item,\n      index: i,\n      isMobile: isMobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Phrase({\n  phrase,\n  index,\n  isMobile\n}) {\n  const audioUrl = phrase.audio ? phrase.audio.indexOf('http') !== -1 ? phrase.audio : `${BASE_URI}${phrase.audio}` : null;\n  return React.createElement(\"div\", {\n    className: \"phrase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    className: 'voice-button',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: `${phrase[defaultKeyShow]}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), audioUrl && !isMobile ? React.createElement(Player, {\n    url: audioUrl,\n    controls: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }) : null), audioUrl && isMobile ? React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Player, {\n    url: audioUrl,\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })) : null, React.createElement(Translations, {\n    values: phrase,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}\n\nfunction Translations({\n  values,\n  index\n}) {\n  const [selectedItem, setSelectedItem] = useState({\n    index: -1,\n    type: ''\n  });\n  return _.map(values, (val, key) => {\n    if (key !== 'katakana' && key !== defaultKeyShow && key !== 'audio') {\n      let isSelected = selectedItem.index === index && selectedItem.type === key,\n          selectModel = {\n        index: index,\n        type: key\n      };\n      return React.createElement(ListItem, {\n        className: `${isSelected ? 'selected' : ''}`,\n        button: true,\n        onClick: () => {\n          setSelectedItem(isSelected ? {} : selectModel);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(TranslateIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: `${isSelected ? val : key}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), isSelected ? React.createElement(VisibilityIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) : React.createElement(VisibilityOffIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  });\n}\n\nexport default Phrases;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/Phrases.js"],"names":["React","useState","useEffect","List","ListItem","ListItemIcon","VisibilityIcon","VisibilityOffIcon","TranslateIcon","FeedbackIcon","ListItemText","Divider","Player","_","defaultKeyShow","BASE_URI","Phrases","data","isMobile","Items","map","item","i","display","justifyContent","Phrase","phrase","index","audioUrl","audio","indexOf","Translations","values","selectedItem","setSelectedItem","type","val","key","isSelected","selectModel"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Player from './Player';\nimport * as _ from 'lodash';\n\nconst defaultKeyShow = 'hiragana';\nconst BASE_URI = 'http://japanese-drills.s3.amazonaws.com/audio/';\n\nfunction Phrases({data, isMobile}){\n    return (\n        <List>\n            <Items data={data} isMobile={isMobile}></Items>\n        </List>\n    )\n}\n\nfunction Items({data, isMobile}){\n    return data.map((item, i) => {\n        return (\n            <div key={i} className=\"phrase-container\" style={{display: 'flex', justifyContent: 'space-between'}}>\n                <div className=\"phrase\">\n                    <Phrase phrase={item} index={i} isMobile={isMobile}></Phrase>\n                </div>\n                <Divider light />\n            </div>\n        )\n    });\n}\n\nfunction Phrase({phrase, index,isMobile}){\n    const audioUrl = phrase.audio ? phrase.audio.indexOf('http') !== -1 ? phrase.audio : `${BASE_URI}${phrase.audio}` : null;\n    return (\n        <div className=\"phrase\">\n            <ListItem button className={'voice-button'}>\n                <ListItemIcon>\n                    <FeedbackIcon/>\n                </ListItemIcon>\n                <ListItemText primary={`${phrase[defaultKeyShow]}`}/>\n                {\n                    audioUrl && !isMobile ?\n                        <Player url={audioUrl} controls={false}></Player>\n                    :\n                        null\n                }\n            </ListItem>\n            {\n                audioUrl && isMobile ?\n                    <ListItem>\n                        <Player url={audioUrl} controls={true}></Player>\n                    </ListItem>\n                :\n                    null\n            }\n            <Translations values={phrase} index={index}></Translations>\n        </div>\n    )\n}\n\nfunction Translations({values, index}){\n    const [selectedItem, setSelectedItem] = useState({index: -1, type: ''});\n\n    return _.map(values, (val, key) => {\n        if(key !== 'katakana' && key !== defaultKeyShow && key !== 'audio'){\n            let isSelected = selectedItem.index === index && selectedItem.type === key,\n                selectModel = {index: index, type: key};\n\n            return (\n                <ListItem className={`${isSelected ? 'selected' : ''}`} button onClick={()=>{setSelectedItem(isSelected ? {} : selectModel)}}>\n                    <ListItemIcon>\n                        <TranslateIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={`${isSelected ? val : key}`} />\n                    {   \n                        isSelected ?\n                            <VisibilityIcon/>\n                        :\n                            <VisibilityOffIcon/>\n                    }\n                </ListItem>\n            )\n        }\n    })\n}\n\nexport default Phrases;\n"]},"metadata":{},"sourceType":"module"}