{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as cardActions from '../actions/cardActions';\nimport { withRouter } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplayIcon from '@material-ui/icons/Replay';\n\nfunction ACard({\n  card,\n  isMobile\n}) {\n  const [isShowAnswer, setIsShowAnswer] = useState(false);\n  const [isShowHint, setIsShowHint] = useState(false);\n  useEffect(() => {\n    setIsShowAnswer(false);\n    setIsShowHint(false);\n  }, [card]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, card.audioUrl ? React.createElement(Player, {\n    url: card.audioUrl,\n    controls: isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"study-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, card.hiragana), isShowHint ? React.createElement(\"div\", {\n    className: \"hint-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, card.romaji) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => setIsShowHint(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Show Hint\")), isShowAnswer ? React.createElement(\"div\", {\n    className: \"answer-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, card.english) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => setIsShowAnswer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Show Answer\")));\n}\n\nfunction FlashCards(props) {\n  const data = useSelector(state => state.cards);\n  const dispatch = useDispatch();\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n\n  const remaining = _.filter(data, o => {\n    return !o.isLesson;\n  });\n\n  const finished = _.filter(data, o => {\n    return o.isLesson;\n  });\n\n  useEffect(() => {\n    let type = props.match.params.lesson === 'all' ? null : props.match.params.lesson;\n    dispatch(cardActions.getCards(type));\n  }, []);\n\n  function resetLesson() {\n    dispatch(cardActions.resetLesson());\n    setCurrentCardIndex(0);\n  }\n\n  function setNext(isRepeat) {\n    if (currentCardIndex + 1 < remaining.length) {\n      if (!isRepeat) {\n        currentCard.isLesson = true;\n        dispatch(cardActions.setCard(currentCard));\n      } else {\n        setCurrentCardIndex(currentCardIndex + 1);\n      }\n    } else {\n      setCurrentCardIndex(0);\n    }\n  }\n\n  let currentCard = { ...remaining[currentCardIndex]\n  };\n  return !_.isEmpty(currentCard) ? React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '100%'\n    },\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, finished.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    startIcon: React.createElement(ReplayIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    onClick: resetLesson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Reset Lesson\")) : null, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      marginBottom: '50px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, currentCardIndex + 1), \" / \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, remaining.length, \" \"), \" / \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, finished.length))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(ACard, {\n    card: currentCard,\n    isMobile: props.isMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginRight: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => setNext(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Good\")), React.createElement(\"div\", {\n    style: {\n      marginLeft: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => setNext(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Revisit\")))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '100%'\n    },\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"No Cards\");\n}\n\nexport default withRouter(FlashCards);","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js"],"names":["React","useState","useEffect","cardActions","withRouter","Card","CardActions","CardContent","Button","Player","_","useDispatch","useSelector","ReplayIcon","ACard","card","isMobile","isShowAnswer","setIsShowAnswer","isShowHint","setIsShowHint","audioUrl","hiragana","romaji","english","FlashCards","props","data","state","cards","dispatch","currentCardIndex","setCurrentCardIndex","remaining","filter","o","isLesson","finished","type","match","params","lesson","getCards","resetLesson","setNext","isRepeat","length","currentCard","setCard","isEmpty","textAlign","width","display","justifyContent","marginBottom","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport * as cardActions from '../actions/cardActions';\nimport {withRouter} from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplayIcon from '@material-ui/icons/Replay';\n\nfunction ACard({card, isMobile}){\n    const [isShowAnswer, setIsShowAnswer] = useState(false);\n    const [isShowHint, setIsShowHint] = useState(false);\n\n    useEffect(()=>{\n        setIsShowAnswer(false);\n        setIsShowHint(false);\n    }, [card])\n\n    return (\n        <div>\n            {\n                card.audioUrl ?\n                    <Player url={card.audioUrl} controls={isMobile}></Player>\n                :\n                    null\n            }\n            <div className=\"study-text\">{card.hiragana}</div>\n\n            {\n                isShowHint ? \n                    <div className=\"hint-text\">{card.romaji}</div>\n                    :\n                    <div>\n                        <Button color=\"secondary\" onClick={()=>setIsShowHint(true)}>Show Hint</Button>\n                    </div>\n                    \n            }\n            {\n                isShowAnswer ? \n                    <div className=\"answer-text\">{card.english}</div>\n                    :\n                    <div>\n                        <Button color=\"primary\" onClick={()=>setIsShowAnswer(true)}>Show Answer</Button>\n                    </div>\n            }\n        </div>\n    )\n}\n\nfunction FlashCards(props){\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\n    const remaining = _.filter(data, o => {\n        return !o.isLesson;\n    });\n    const finished = _.filter(data, o => {\n        return o.isLesson;\n    });\n\n    useEffect(()=>{\n        let type = props.match.params.lesson === 'all' ? null : props.match.params.lesson;\n        dispatch(cardActions.getCards(type));\n    },[]);\n\n    function resetLesson(){\n        dispatch(cardActions.resetLesson());\n        setCurrentCardIndex(0);\n    }\n\n    function setNext(isRepeat){\n        if(currentCardIndex+1 < remaining.length){\n            if(!isRepeat){\n                currentCard.isLesson = true;\n                dispatch(cardActions.setCard(currentCard));\n            }else{\n                setCurrentCardIndex(currentCardIndex+1);\n            }\n        }else{\n            setCurrentCardIndex(0);\n        }\n    }\n    \n    let currentCard = {...remaining[currentCardIndex]};\n\n    return !_.isEmpty(currentCard) ? (\n        <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">\n            {\n                finished.length > 0 ?\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<ReplayIcon />}\n                            onClick={resetLesson}\n                        >\n                            Reset Lesson\n                        </Button>\n                    </div>\n                :\n                    null\n            }\n\n            <div style={{display: 'flex', justifyContent: 'space-evenly', marginBottom: '50px'}}>\n                <div><span>{currentCardIndex+1}</span> / <span>{remaining.length} </span> / <span>{finished.length}</span></div>\n            </div>\n\n            <Card>\n                <CardContent>\n                    <ACard card={currentCard} isMobile={props.isMobile}></ACard>\n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n                        <div style={{marginRight: '5px'}}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setNext(false)}>\n                                Good\n                            </Button>\n                        </div>\n                        <div style={{marginLeft: '5px'}}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>setNext(true)}>\n                                Revisit\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </div>\n    ) : <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">No Cards</div>\n}\n\nexport default withRouter(FlashCards);\n"]},"metadata":{},"sourceType":"module"}