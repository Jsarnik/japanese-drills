{"ast":null,"code":"import _objectSpread from\"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/jsarnik-a/Documents/Projects/learn-japanese/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import*as cardActions from'../actions/cardActions';import{withRouter}from'react-router-dom';import Card from'@material-ui/core/Card';import CardActions from'@material-ui/core/CardActions';import CardContent from'@material-ui/core/CardContent';import{withStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';import Player from'./Player';import*as _ from'lodash';import{useDispatch,useSelector}from\"react-redux\";import ReplayIcon from'@material-ui/icons/Replay';import green from'@material-ui/core/colors/green';import blue from'@material-ui/core/colors/blue';var GreenButton=withStyles(function(theme){return{root:{color:green['A700'],backgroundColor:'#fff','&:hover':{backgroundColor:green[50]}}};})(Button);var BlueButton=withStyles(function(theme){return{root:{color:blue['A700'],backgroundColor:'#fff','&:hover':{backgroundColor:blue[50]}}};})(Button);function ACard(_ref){var card=_ref.card,isMobile=_ref.isMobile;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShowAnswer=_useState2[0],setIsShowAnswer=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isShowRomaji=_useState4[0],setIsShowRomaji=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isShowNoKanji=_useState6[0],setIsShowNoKanji=_useState6[1];useEffect(function(){setIsShowAnswer(false);setIsShowRomaji(false);setIsShowNoKanji(false);},[card]);return React.createElement(\"div\",null,card.audioUrl?React.createElement(Player,{url:card.audioUrl,controls:isMobile}):null,React.createElement(\"div\",{className:\"study-text\"},card.hiragana),isShowNoKanji?React.createElement(\"div\",{className:\"hint-text\"},card.no_kanji):React.createElement(\"div\",null,React.createElement(Button,{color:\"secondary\",onClick:function onClick(){return setIsShowNoKanji(true);}},\"Show No Kanji\")),isShowRomaji?React.createElement(\"div\",{className:\"romaji-text\"},card.romaji):React.createElement(\"div\",null,React.createElement(BlueButton,{color:\"secondary\",onClick:function onClick(){return setIsShowRomaji(true);}},\"Show Romaji\")),isShowAnswer?React.createElement(\"div\",{className:\"answer-text\"},card.english):React.createElement(\"div\",null,React.createElement(GreenButton,{color:\"primary\",onClick:function onClick(){return setIsShowAnswer(true);}},\"Show Answer\")));}function FlashCards(props){var data=useSelector(function(state){return state.cards;});var dispatch=useDispatch();var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),currentCardIndex=_useState8[0],setCurrentCardIndex=_useState8[1];var remaining=_.filter(data,function(o){return!o.isLesson;});var finished=_.filter(data,function(o){return o.isLesson;});useEffect(function(){var type=props.match.params.lesson==='all'?null:props.match.params.lesson;dispatch(cardActions.getCards(type));},[]);function resetLesson(){dispatch(cardActions.resetLesson());setCurrentCardIndex(0);}function setNext(isRepeat){if(currentCardIndex+1<remaining.length){if(!isRepeat){currentCard.isLesson=true;dispatch(cardActions.setCard(currentCard));}else{setCurrentCardIndex(currentCardIndex+1);}}else{setCurrentCardIndex(0);}}var currentCard=_objectSpread({},remaining[currentCardIndex]);return!_.isEmpty(currentCard)?React.createElement(\"div\",{style:{textAlign:'center',width:'100%'},className:\"card-container\"},finished.length>0?React.createElement(\"div\",null,React.createElement(Button,{variant:\"contained\",color:\"secondary\",startIcon:React.createElement(ReplayIcon,null),onClick:resetLesson},\"Reset Lesson\")):null,React.createElement(\"div\",null,props.match.params.lesson.toUpperCase()),React.createElement(\"div\",{style:{display:'flex',justifyContent:'space-evenly',marginBottom:'50px'}},React.createElement(\"div\",null,React.createElement(\"span\",null,currentCardIndex+1),\" / \",React.createElement(\"span\",{className:\"remaining\"},remaining.length,\" \"),\" / \",React.createElement(\"span\",{className:\"finished\"},finished.length))),React.createElement(Card,null,React.createElement(CardContent,null,React.createElement(ACard,{card:currentCard,isMobile:props.isMobile})),React.createElement(CardActions,null,React.createElement(\"div\",{style:{display:'flex',width:'100%',justifyContent:'center'}},React.createElement(\"div\",{style:{marginRight:'5px'}},React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return setNext(false);}},\"Good\")),React.createElement(\"div\",{style:{marginLeft:'5px'}},React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:function onClick(){return setNext(true);}},\"Revisit\")))))):React.createElement(\"div\",{style:{textAlign:'center',width:'100%'},className:\"card-container\"},\"No Cards\");}export default withRouter(FlashCards);","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/components/FlashCards.js"],"names":["React","useState","useEffect","cardActions","withRouter","Card","CardActions","CardContent","withStyles","Button","Player","_","useDispatch","useSelector","ReplayIcon","green","blue","GreenButton","theme","root","color","backgroundColor","BlueButton","ACard","card","isMobile","isShowAnswer","setIsShowAnswer","isShowRomaji","setIsShowRomaji","isShowNoKanji","setIsShowNoKanji","audioUrl","hiragana","no_kanji","romaji","english","FlashCards","props","data","state","cards","dispatch","currentCardIndex","setCurrentCardIndex","remaining","filter","o","isLesson","finished","type","match","params","lesson","getCards","resetLesson","setNext","isRepeat","length","currentCard","setCard","isEmpty","textAlign","width","toUpperCase","display","justifyContent","marginBottom","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport * as cardActions from '../actions/cardActions';\nimport {withRouter} from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Player from './Player';\nimport * as _ from 'lodash';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\n\nconst GreenButton = withStyles(theme => ({\n    root: {\n      color: green['A700'],\n      backgroundColor: '#fff',\n      '&:hover': {\n        backgroundColor: green[50],\n      },\n    },\n  }))(Button);\n\n  const BlueButton = withStyles(theme => ({\n    root: {\n      color: blue['A700'],\n      backgroundColor: '#fff',\n      '&:hover': {\n        backgroundColor: blue[50],\n      },\n    },\n  }))(Button);\n\nfunction ACard({card, isMobile}){\n    const [isShowAnswer, setIsShowAnswer] = useState(false);\n    const [isShowRomaji, setIsShowRomaji] = useState(false);\n    const [isShowNoKanji, setIsShowNoKanji] = useState(false);\n\n    useEffect(()=>{\n        setIsShowAnswer(false);\n        setIsShowRomaji(false);\n        setIsShowNoKanji(false);\n    }, [card])\n\n    return (\n        <div>\n            {\n                card.audioUrl ?\n                    <Player url={card.audioUrl} controls={isMobile}></Player>\n                :\n                    null\n            }\n            <div className=\"study-text\">{card.hiragana}</div>\n\n            {\n                isShowNoKanji ? \n                    <div className=\"hint-text\">{card.no_kanji}</div>\n                    :\n                    <div>\n                        <Button color=\"secondary\" onClick={()=>setIsShowNoKanji(true)}>Show No Kanji</Button>\n                    </div>\n                    \n            }\n\n            {\n                isShowRomaji ? \n                    <div className=\"romaji-text\">{card.romaji}</div>\n                    :\n                    <div>\n                        <BlueButton color=\"secondary\" onClick={()=>setIsShowRomaji(true)}>Show Romaji</BlueButton> \n                    </div>\n                    \n            }\n\n            {\n                isShowAnswer ? \n                    <div className=\"answer-text\">{card.english}</div>\n                    :\n                    <div>\n                        <GreenButton color=\"primary\" onClick={()=>setIsShowAnswer(true)}>Show Answer</GreenButton>\n                    </div>\n            }\n        </div>\n    )\n}\n\nfunction FlashCards(props){\n    const data = useSelector(state => state.cards);\n    const dispatch = useDispatch();\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\n    const remaining = _.filter(data, o => {\n        return !o.isLesson;\n    });\n    const finished = _.filter(data, o => {\n        return o.isLesson;\n    });\n\n    useEffect(()=>{\n        let type = props.match.params.lesson === 'all' ? null : props.match.params.lesson;\n        dispatch(cardActions.getCards(type));\n    },[]);\n\n    function resetLesson(){\n        dispatch(cardActions.resetLesson());\n        setCurrentCardIndex(0);\n    }\n\n    function setNext(isRepeat){\n        if(currentCardIndex+1 < remaining.length){\n            if(!isRepeat){\n                currentCard.isLesson = true;\n                dispatch(cardActions.setCard(currentCard));\n            }else{\n                setCurrentCardIndex(currentCardIndex+1);\n            }\n        }else{\n            setCurrentCardIndex(0);\n        }\n    }\n    \n    let currentCard = {...remaining[currentCardIndex]};\n\n    return !_.isEmpty(currentCard) ? (\n        <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">\n            {\n                finished.length > 0 ?\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<ReplayIcon />}\n                            onClick={resetLesson}\n                        >\n                            Reset Lesson\n                        </Button>\n                    </div>\n                :\n                    null\n            }\n\n            <div>{props.match.params.lesson.toUpperCase()}</div>\n            <div style={{display: 'flex', justifyContent: 'space-evenly', marginBottom: '50px'}}>\n                <div><span>{currentCardIndex+1}</span> / <span className=\"remaining\">{remaining.length} </span> / <span className=\"finished\">{finished.length}</span></div>\n            </div>\n\n            <Card>\n                <CardContent>\n                    <ACard card={currentCard} isMobile={props.isMobile}></ACard>\n                </CardContent>\n                <CardActions>\n                    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n                        <div style={{marginRight: '5px'}}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setNext(false)}>\n                                Good\n                            </Button>\n                        </div>\n                        <div style={{marginLeft: '5px'}}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>setNext(true)}>\n                                Revisit\n                            </Button>\n                        </div>\n                    </div>\n                </CardActions>\n            </Card>\n        </div>\n    ) : <div style={{textAlign: 'center', width: '100%'}} className=\"card-container\">No Cards</div>\n}\n\nexport default withRouter(FlashCards);\n"]},"metadata":{},"sourceType":"module"}