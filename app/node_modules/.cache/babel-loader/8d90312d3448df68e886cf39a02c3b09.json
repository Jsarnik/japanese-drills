{"ast":null,"code":"var _jsxFileName = \"/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Player.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const audioItem = useRef(null);\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audioItem.play() : audioItem.pause();\n  }, [playing]);\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle, audioItem];\n};\n\nconst Player = ({\n  url\n}) => {\n  const [playing, toggle, audioItem] = useAudio(url);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"audio\", {\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: url,\n    type: \"audio/mpeg\",\n    ref: audioItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, playing ? React.createElement(PauseIcon, {\n    style: {\n      color: red[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : React.createElement(RecordVoiceOverIcon, {\n    style: {\n      color: green[500]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/src/components/Player.js"],"names":["React","useState","useEffect","useRef","PauseIcon","RecordVoiceOverIcon","green","red","useAudio","url","audioItem","audio","Audio","playing","setPlaying","toggle","play","pause","addEventListener","removeEventListener","Player","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,0BAA3B;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACQ,KAAD,IAAUV,QAAQ,CAAC,IAAIW,KAAJ,CAAUH,GAAV,CAAD,CAAxB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,GAAGH,SAAS,CAACM,IAAV,EAAH,GAAsBN,SAAS,CAACO,KAAV,EAA7B;AACD,GAFM,EAGP,CAACJ,OAAD,CAHO,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACO,gBAAN,CAAuB,OAAvB,EAAgC,MAAMJ,UAAU,CAAC,KAAD,CAAhD;AACA,WAAO,MAAM;AACXH,MAAAA,KAAK,CAACQ,mBAAN,CAA0B,OAA1B,EAAmC,MAAML,UAAU,CAAC,KAAD,CAAnD;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACD,OAAD,EAAUE,MAAV,EAAkBL,SAAlB,CAAP;AACD,CArBD;;AAuBA,MAAMU,MAAM,GAAG,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAa;AAC1B,QAAM,CAACI,OAAD,EAAUE,MAAV,EAAkBL,SAAlB,IAA+BF,QAAQ,CAACC,GAAD,CAA7C;AAEA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAkB,IAAA,IAAI,EAAC,YAAvB;AAAoC,IAAA,GAAG,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,OAAO,EAAEK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,OAAO,GACH,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAEd,GAAG,CAAC,GAAD;AAAZ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAGH,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEc,MAAAA,KAAK,EAAEf,KAAK,CAAC,GAAD;AAAd,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALZ,CALJ,CADN;AAgBD,CAnBD;;AAqBA,eAAec,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useAudio = url => {\n  const audioItem = useRef(null)\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      playing ? audioItem.play() : audioItem.pause();\n    },\n    [playing]\n  );\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, audioItem];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle, audioItem] = useAudio(url);\n\n  return (\n        <div>\n            <audio controls>\n                \n                <source src={url} type=\"audio/mpeg\" ref={audioItem} />\n            </audio>\n            <div onClick={toggle}>\n                {\n                    playing ? \n                        <PauseIcon style={{ color: red[500]}}></PauseIcon>\n                    :\n                        <RecordVoiceOverIcon style={{ color: green[500]}}></RecordVoiceOverIcon>  \n                }\n            </div>\n        </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}