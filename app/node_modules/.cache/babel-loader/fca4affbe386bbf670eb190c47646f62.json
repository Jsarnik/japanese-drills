{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from './actions/cardActions';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport QuestionsAndAnswers from './components/QuestionsAndAnswers';\nimport Phrases from './components/Phrases';\n\nfunction App() {\n  const cards = useSelector(state => state.cards);\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    setIsMobile(window.outerWidth <= 767);\n\n    const handleResize = () => {\n      setIsMobile(window.outerWidth <= 767);\n    };\n\n    window.addEventListener(\"resize\", handleResize, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener(\"resize\", handleResize, true);\n    };\n  }, []);\n  useEffect(() => {\n    console.log('call once');\n    dispatch(cardActions.getCards());\n  }, []); // const data = cards || {};\n\n  console.log(cards);\n  return null; // return (\n  //   <div className=\"App\" style={{width: '85%', margin: '0 auto'}}>\n  //     <ExpansionPanel>\n  //       <ExpansionPanelSummary\n  //         expandIcon={<ExpandMoreIcon />}\n  //         aria-controls=\"questions\"\n  //         id=\"questions\"\n  //       >\n  //         Questions\n  //       </ExpansionPanelSummary>\n  //       <ExpansionPanelDetails>\n  //         <QuestionsAndAnswers data={data.questions} isMobile={isMobile}></QuestionsAndAnswers>\n  //       </ExpansionPanelDetails>\n  //     </ExpansionPanel>\n  //     <ExpansionPanel>\n  //       <ExpansionPanelSummary\n  //         expandIcon={<ExpandMoreIcon />}\n  //         aria-controls=\"questions\"\n  //         id=\"questions\"\n  //       >\n  //         Phrases\n  //       </ExpansionPanelSummary>\n  //       <ExpansionPanelDetails>\n  //         <Phrases data={data.phrases} isMobile={isMobile}></Phrases>\n  //       </ExpansionPanelDetails>\n  //     </ExpansionPanel>\n  //   </div>\n  // );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jsarnik-a/Documents/Projects/learn-japanese/web/src/App.js"],"names":["React","useState","useEffect","useDispatch","useSelector","cardActions","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpandMoreIcon","QuestionsAndAnswers","Phrases","App","cards","state","dispatch","isMobile","setIsMobile","window","outerWidth","handleResize","addEventListener","passive","removeEventListener","console","log","getCards"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,WAAZ,MAA6B,uBAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CAACC,MAAM,CAACC,UAAP,IAAqB,GAAtB,CAAX;;AAEA,UAAMC,YAAY,GAAG,MAAM;AACzBH,MAAAA,WAAW,CAACC,MAAM,CAACC,UAAP,IAAqB,GAAtB,CAAX;AACD,KAFD;;AAIAD,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC,EAAgD;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAhD;AAEA,WAAO,MAAM;AACXJ,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC,EAAmD,IAAnD;AACD,KAFD;AAGD,GAZQ,EAYP,EAZO,CAAT;AAeAlB,EAAAA,SAAS,CAAC,MAAI;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAV,IAAAA,QAAQ,CAACV,WAAW,CAACqB,QAAZ,EAAD,CAAR;AACD,GAHQ,EAGP,EAHO,CAAT,CApBa,CAyBb;;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEA,SAAO,IAAP,CA7Ba,CA8Bb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as cardActions from './actions/cardActions';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport QuestionsAndAnswers from './components/QuestionsAndAnswers';\nimport Phrases from './components/Phrases';\n\nfunction App() {\n  const cards = useSelector(state => state.cards);\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    setIsMobile(window.outerWidth <= 767);\n\n    const handleResize = () => {\n      setIsMobile(window.outerWidth <= 767);\n    };\n\n    window.addEventListener(\"resize\", handleResize, { passive: true });\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize, true);\n    }\n  },[]);\n\n\n  useEffect(()=>{\n    console.log('call once')\n    dispatch(cardActions.getCards())\n  },[])\n\n  // const data = cards || {};\n\n  console.log(cards)\n\n  return null;\n  // return (\n  //   <div className=\"App\" style={{width: '85%', margin: '0 auto'}}>\n  //     <ExpansionPanel>\n  //       <ExpansionPanelSummary\n  //         expandIcon={<ExpandMoreIcon />}\n  //         aria-controls=\"questions\"\n  //         id=\"questions\"\n  //       >\n  //         Questions\n  //       </ExpansionPanelSummary>\n  //       <ExpansionPanelDetails>\n  //         <QuestionsAndAnswers data={data.questions} isMobile={isMobile}></QuestionsAndAnswers>\n  //       </ExpansionPanelDetails>\n  //     </ExpansionPanel>\n      \n  //     <ExpansionPanel>\n  //       <ExpansionPanelSummary\n  //         expandIcon={<ExpandMoreIcon />}\n  //         aria-controls=\"questions\"\n  //         id=\"questions\"\n  //       >\n  //         Phrases\n  //       </ExpansionPanelSummary>\n  //       <ExpansionPanelDetails>\n  //         <Phrases data={data.phrases} isMobile={isMobile}></Phrases>\n  //       </ExpansionPanelDetails>\n  //     </ExpansionPanel>\n  //   </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}